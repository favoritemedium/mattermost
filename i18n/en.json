[
  {
    "id": "April",
    "translation": "April"
  },
  {
    "id": "August",
    "translation": "August"
  },
  {
    "id": "December",
    "translation": "December"
  },
  {
    "id": "February",
    "translation": "February"
  },
  {
    "id": "January",
    "translation": "January"
  },
  {
    "id": "July",
    "translation": "July"
  },
  {
    "id": "June",
    "translation": "June"
  },
  {
    "id": "March",
    "translation": "March"
  },
  {
    "id": "May",
    "translation": "May"
  },
  {
    "id": "November",
    "translation": "November"
  },
  {
    "id": "October",
    "translation": "October"
  },
  {
    "id": "September",
    "translation": "September"
  },
  {
    "id": "api.admin.file_read_error",
    "translation": "Error reading log file"
  },
  {
    "id": "api.admin.init.debug",
    "translation": "Initializing admin api routes"
  },
  {
    "id": "api.admin.test_email.body",
    "translation": "<br/><br/><br/>It appears your Mattermost email is setup correctly!"
  },
  {
    "id": "api.admin.test_email.subject",
    "translation": "Mattermost - Testing Email Settings"
  },
  {
    "id": "api.api.init.parsing_templates.debug",
    "translation": "Parsing server templates at %v"
  },
  {
    "id": "api.api.init.parsing_templates.error",
    "translation": "Failed to parse server templates %v"
  },
  {
    "id": "api.api.render.error",
    "translation": "Error rendering template %v err=%v"
  },
  {
    "id": "api.channel.add_member.added",
    "translation": "%v added to the channel by %v"
  },
  {
    "id": "api.channel.add_member.find_channel.app_error",
    "translation": "Failed to find channel"
  },
  {
    "id": "api.channel.add_member.find_user.app_error",
    "translation": "Failed to find user to be added"
  },
  {
    "id": "api.channel.add_member.user_adding.app_error",
    "translation": "Failed to find user doing the adding"
  },
  {
    "id": "api.channel.add_user.to.channel.failed.app_error",
    "translation": "Failed to add user to channel"
  },
  {
    "id": "api.channel.add_user_to_channel.deleted.app_error",
    "translation": "The channel has been archived or deleted"
  },
  {
    "id": "api.channel.add_user_to_channel.type.app_error",
    "translation": "Can not add user to this channel type"
  },
  {
    "id": "api.channel.create_channel.direct_channel.app_error",
    "translation": "Must use createDirectChannel api service for direct message channel creation"
  },
  {
    "id": "api.channel.create_channel.invalid_character.app_error",
    "translation": "Invalid character '__' in channel name for non-direct channel"
  },
  {
    "id": "api.channel.create_default_channels.off_topic",
    "translation": "Off-Topic"
  },
  {
    "id": "api.channel.create_default_channels.town_square",
    "translation": "Town Square"
  },
  {
    "id": "api.channel.create_direct_channel.invalid_user.app_error",
    "translation": "Invalid other user id "
  },
  {
    "id": "api.channel.delete_channel.archived",
    "translation": "%v has archived the channel."
  },
  {
    "id": "api.channel.delete_channel.cannot.app_error",
    "translation": "Cannot delete the default channel {{.Channel}}"
  },
  {
    "id": "api.channel.delete_channel.deleted.app_error",
    "translation": "The channel has been archived or deleted"
  },
  {
    "id": "api.channel.delete_channel.failed_post.error",
    "translation": "Failed to post archive message %v"
  },
  {
    "id": "api.channel.delete_channel.failed_send.app_error",
    "translation": "Failed to send archive message"
  },
  {
    "id": "api.channel.delete_channel.incoming_webhook.error",
    "translation": "Encountered error deleting incoming webhook, id=%v"
  },
  {
    "id": "api.channel.delete_channel.outgoing_webhook.error",
    "translation": "Encountered error deleting outgoing webhook, id=%v"
  },
  {
    "id": "api.channel.delete_channel.permissions.app_error",
    "translation": "You do not have the appropriate permissions"
  },
  {
    "id": "api.channel.get_channel_counts.app_error",
    "translation": "Unable to get channel counts from the database"
  },
  {
    "id": "api.channel.get_channel_extra_info.deleted.app_error",
    "translation": "The channel has been archived or deleted"
  },
  {
    "id": "api.channel.get_channel_extra_info.member_limit.app_error",
    "translation": "Failed to parse member limit"
  },
  {
    "id": "api.channel.get_channels.error",
    "translation": "Error in getting users profile for id=%v forcing logout"
  },
  {
    "id": "api.channel.init.debug",
    "translation": "Initializing channel api routes"
  },
  {
    "id": "api.channel.join_channel.permissions.app_error",
    "translation": "You do not have the appropriate permissions"
  },
  {
    "id": "api.channel.join_channel.post_and_forget",
    "translation": "%v has joined the channel."
  },
  {
    "id": "api.channel.leave.default.app_error",
    "translation": "Cannot leave the default channel {{.Channel}}"
  },
  {
    "id": "api.channel.leave.direct.app_error",
    "translation": "Cannot leave a direct message channel"
  },
  {
    "id": "api.channel.leave.left",
    "translation": "%v has left the channel."
  },
  {
    "id": "api.channel.post_update_channel_header_message_and_forget.join_leave.error",
    "translation": "Failed to post join/leave message %v"
  },
  {
    "id": "api.channel.post_update_channel_header_message_and_forget.removed",
    "translation": "%s removed the channel header (was: %s)"
  },
  {
    "id": "api.channel.post_update_channel_header_message_and_forget.retrieve_user.error",
    "translation": "Failed to retrieve user while trying to save update channel header message %v"
  },
  {
    "id": "api.channel.post_update_channel_header_message_and_forget.updated_from",
    "translation": "%s updated the channel header from: %s to: %s"
  },
  {
    "id": "api.channel.post_update_channel_header_message_and_forget.updated_to",
    "translation": "%s updated the channel header to: %s"
  },
  {
    "id": "api.channel.post_user_add_remove_message_and_forget.error",
    "translation": "Failed to post join/leave message %v"
  },
  {
    "id": "api.channel.remove_member.permissions.app_error",
    "translation": "You do not have the appropriate permissions "
  },
  {
    "id": "api.channel.remove_member.unable.app_error",
    "translation": "Unable to remove user."
  },
  {
    "id": "api.channel.remove_user_from_channel.deleted.app_error",
    "translation": "The channel has been archived or deleted"
  },
  {
    "id": "api.channel.update_channel.deleted.app_error",
    "translation": "The channel has been archived or deleted"
  },
  {
    "id": "api.channel.update_channel.permission.app_error",
    "translation": "You do not have the appropriate permissions"
  },
  {
    "id": "api.channel.update_channel.tried.app_error",
    "translation": "Tried to perform an invalid update of the default channel {{.Channel}}"
  },
  {
    "id": "api.command.check_command.start.app_error",
    "translation": "Command must start with /"
  },
  {
    "id": "api.command.echo_command.create.error",
    "translation": "Unable to create /echo post, err=%v"
  },
  {
    "id": "api.command.echo_command.description",
    "translation": "Echo back text from your account, /echo \"message\" [delay in seconds]"
  },
  {
    "id": "api.command.echo_command.high_volume.app_error",
    "translation": "High volume of echo request, cannot process request"
  },
  {
    "id": "api.command.echo_command.under.app_error",
    "translation": "Delays must be under 10000 seconds"
  },
  {
    "id": "api.command.init.debug",
    "translation": "Initializing command api routes"
  },
  {
    "id": "api.command.load_test_channels_command.channel.description",
    "translation": "Add a specified number of random channels to current team <MinChannels> <MaxChannels>"
  },
  {
    "id": "api.command.load_test_channels_command.fuzz.description",
    "translation": "Add a specified number of random channels with fuzz text to current team <Min Channels> <Max Channels>"
  },
  {
    "id": "api.command.load_test_command.description",
    "translation": "Debug Load Testing"
  },
  {
    "id": "api.command.load_test_posts_command.fuzz.description",
    "translation": "Add some random posts with fuzz text to current channel <Min Posts> <Max Posts> <Min Images> <Max Images>"
  },
  {
    "id": "api.command.load_test_posts_command.posts.description",
    "translation": "Add some random posts to current channel <Min Posts> <Max Posts> <Min Images> <Max Images>"
  },
  {
    "id": "api.command.load_test_setup_command.create.error",
    "translation": "Failed to create testing environment"
  },
  {
    "id": "api.command.load_test_setup_command.created.info",
    "translation": "Team Created: %v"
  },
  {
    "id": "api.command.load_test_setup_command.description",
    "translation": "Creates a testing environment in current team. [teams] [fuzz] <Num Channels> <Num Users> <NumPosts>"
  },
  {
    "id": "api.command.load_test_setup_command.login.info",
    "translation": "\t User to login: %v, %v"
  },
  {
    "id": "api.command.load_test_url_command.create.error",
    "translation": "Unable to create post, err=%v"
  },
  {
    "id": "api.command.load_test_url_command.description",
    "translation": "Add a post containing the text from a given url to current channel <Url>"
  },
  {
    "id": "api.command.load_test_url_command.file.app_error",
    "translation": "Unable to get file"
  },
  {
    "id": "api.command.load_test_url_command.reading.app_error",
    "translation": "Encountered error reading file"
  },
  {
    "id": "api.command.load_test_url_command.url.app_error",
    "translation": "Command must contain a url"
  },
  {
    "id": "api.command.load_test_users_command.fuzz.description",
    "translation": "Add a specified number of random users with fuzz text to current team <Min Users> <Max Users>"
  },
  {
    "id": "api.command.load_test_users_command.users.description",
    "translation": "Add a specified number of random users to current team <Min Users> <Max Users>"
  },
  {
    "id": "api.command.logout_command.description",
    "translation": "Logout"
  },
  {
    "id": "api.command.me_command.create.error",
    "translation": "Unable to create /me post post, err=%v"
  },
  {
    "id": "api.command.me_command.description",
    "translation": "Do an action, /me [message]"
  },
  {
    "id": "api.command.no_implemented.app_error",
    "translation": "Command not implemented"
  },
  {
    "id": "api.command.shrug_command.create.error",
    "translation": "Unable to create /shrug post post, err=%v"
  },
  {
    "id": "api.command.shrug_command.description",
    "translation": "Adds ¯\\_(ツ)_/¯ to your message, /shrug [message]"
  },
  {
    "id": "api.commmand.join_command.description",
    "translation": "Join the open channel"
  },
  {
    "id": "api.context.404.app_error",
    "translation": "Sorry, we could not find the page."
  },
  {
    "id": "api.context.invalid_param.app_error",
    "translation": "Invalid {{.Name}} parameter"
  },
  {
    "id": "api.context.invalid_team_url.debug",
    "translation": "TeamURL accessed when not valid. Team URL should not be used in api functions or those that are team independent"
  },
  {
    "id": "api.context.invalid_token.error",
    "translation": "Invalid session token=%v, err=%v"
  },
  {
    "id": "api.context.last_activity_at.error",
    "translation": "Failed to update LastActivityAt for user_id=%v and session_id=%v, err=%v"
  },
  {
    "id": "api.context.log.error",
    "translation": "%v:%v code=%v rid=%v uid=%v ip=%v %v [details: %v]"
  },
  {
    "id": "api.context.permissions.app_error",
    "translation": "You do not have the appropriate permissions"
  },
  {
    "id": "api.context.session_expired.app_error",
    "translation": "Invalid or expired session, please login again."
  },
  {
    "id": "api.context.system_permissions.app_error",
    "translation": "You do not have the appropriate permissions (system)"
  },
  {
    "id": "api.context.token_provided.app_error",
    "translation": "Session is not OAuth but token was provided in the query string"
  },
  {
    "id": "api.context.unknown.app_error",
    "translation": "An unknown error has occurred. Please contact support."
  },
  {
    "id": "api.export.json.app_error",
    "translation": "Unable to convert to json"
  },
  {
    "id": "api.export.open.app_error",
    "translation": "Unable to open file"
  },
  {
    "id": "api.export.open_dir.app_error",
    "translation": "Unable to open directory"
  },
  {
    "id": "api.export.open_file.app_error",
    "translation": "Unable to open file for export"
  },
  {
    "id": "api.export.options.create.app_error",
    "translation": "Unable to create options file"
  },
  {
    "id": "api.export.options.write.app_error",
    "translation": "Unable to write to options file"
  },
  {
    "id": "api.export.read_dir.app_error",
    "translation": "Unable to read directory"
  },
  {
    "id": "api.export.s3.app_error",
    "translation": "S3 is not supported for local storage export."
  },
  {
    "id": "api.export.write_file.app_error",
    "translation": "Unable to write to export file"
  },
  {
    "id": "api.file.file_upload.exceeds",
    "translation": "File exceeds max image size."
  },
  {
    "id": "api.file.get_export.retrieve.app_error",
    "translation": "Unable to retrieve exported file. Please re-export"
  },
  {
    "id": "api.file.get_export.team_admin.app_error",
    "translation": "Only a team admin can retrieve exported data."
  },
  {
    "id": "api.file.get_file.not_found.app_error",
    "translation": "Could not find file."
  },
  {
    "id": "api.file.get_file.public_invalid.app_error",
    "translation": "The public link does not appear to be valid"
  },
  {
    "id": "api.file.get_public_link.disabled.app_error",
    "translation": "Public links have been disabled"
  },
  {
    "id": "api.file.handle_images_forget.decode.error",
    "translation": "Unable to decode image channelId=%v userId=%v filename=%v err=%v"
  },
  {
    "id": "api.file.handle_images_forget.encode_jpeg.error",
    "translation": "Unable to encode image as jpeg channelId=%v userId=%v filename=%v err=%v"
  },
  {
    "id": "api.file.handle_images_forget.encode_preview.error",
    "translation": "Unable to encode image as preview jpg channelId=%v userId=%v filename=%v err=%v"
  },
  {
    "id": "api.file.handle_images_forget.upload_preview.error",
    "translation": "Unable to upload preview channelId=%v userId=%v filename=%v err=%v"
  },
  {
    "id": "api.file.handle_images_forget.upload_thumb.error",
    "translation": "Unable to upload thumbnail channelId=%v userId=%v filename=%v err=%v"
  },
  {
    "id": "api.file.init.debug",
    "translation": "Initializing file api routes"
  },
  {
    "id": "api.file.open_file_write_stream.configured.app_error",
    "translation": "File storage not configured properly. Please configure for either S3 or local server file storage."
  },
  {
    "id": "api.file.open_file_write_stream.creating_dir.app_error",
    "translation": "Encountered an error creating the directory for the new file"
  },
  {
    "id": "api.file.open_file_write_stream.local_server.app_error",
    "translation": "Encountered an error writing to local server storage"
  },
  {
    "id": "api.file.open_file_write_stream.s3.app_error",
    "translation": "S3 is not supported."
  },
  {
    "id": "api.file.read_file.configured.app_error",
    "translation": "File storage not configured properly. Please configure for either S3 or local server file storage."
  },
  {
    "id": "api.file.read_file.get.app_error",
    "translation": "Unable to get file from S3"
  },
  {
    "id": "api.file.read_file.reading_local.app_error",
    "translation": "Encountered an error reading from local server storage"
  },
  {
    "id": "api.file.upload_file.image.app_error",
    "translation": "Unable to upload image file."
  },
  {
    "id": "api.file.upload_file.large_image.app_error",
    "translation": "Unable to upload image file. File is too large."
  },
  {
    "id": "api.file.upload_file.storage.app_error",
    "translation": "Unable to upload file. Image storage is not configured."
  },
  {
    "id": "api.file.upload_file.too_large.app_error",
    "translation": "Unable to upload file. File is too large."
  },
  {
    "id": "api.file.write_file.configured.app_error",
    "translation": "File storage not configured properly. Please configure for either S3 or local server file storage."
  },
  {
    "id": "api.file.write_file.s3.app_error",
    "translation": "Encountered an error writing to S3"
  },
  {
    "id": "api.file.write_file_locally.create_dir.app_error",
    "translation": "Encountered an error creating the directory for the new file"
  },
  {
    "id": "api.file.write_file_locally.writing.app_error",
    "translation": "Encountered an error writing to local server storage"
  },
  {
    "id": "api.import.import_post.saving.debug",
    "translation": "Error saving post. user=%v, message=%v"
  },
  {
    "id": "api.import.import_user.joining_default.error",
    "translation": "Encountered an issue joining default channels user_id=%s, team_id=%s, err=%v"
  },
  {
    "id": "api.import.import_user.saving.error",
    "translation": "Error saving user. err=%v"
  },
  {
    "id": "api.import.import_user.set_email.error",
    "translation": "Failed to set email verified err=%v"
  },
  {
    "id": "api.license.add_license.array.app_error",
    "translation": "Empty array under 'license' in request"
  },
  {
    "id": "api.license.add_license.expired.app_error",
    "translation": "License is either expired or has not yet started."
  },
  {
    "id": "api.license.add_license.invalid.app_error",
    "translation": "Invalid license file."
  },
  {
    "id": "api.license.add_license.invalid_count.app_error",
    "translation": "Unable to count total unique users."
  },
  {
    "id": "api.license.add_license.no_file.app_error",
    "translation": "No file under 'license' in request"
  },
  {
    "id": "api.license.add_license.open.app_error",
    "translation": "Could not open license file"
  },
  {
    "id": "api.license.add_license.save.app_error",
    "translation": "License did not save properly."
  },
  {
    "id": "api.license.add_license.unique_users.app_error",
    "translation": "This license only supports {{.Users}} users, when your system has {{.Count}} unique users. Unique users are counted distinctly by email address. You can see total user count under Site Reports -> View Statistics."
  },
  {
    "id": "api.license.init.debug",
    "translation": "Initializing license api routes"
  },
  {
    "id": "api.license.remove_license.remove.app_error",
    "translation": "License did not remove properly."
  },
  {
    "id": "api.oauth.allow_oauth.bad_client.app_error",
    "translation": "invalid_request: Bad client_id"
  },
  {
    "id": "api.oauth.allow_oauth.bad_redirect.app_error",
    "translation": "invalid_request: Missing or bad redirect_uri"
  },
  {
    "id": "api.oauth.allow_oauth.bad_response.app_error",
    "translation": "invalid_request: Bad response_type"
  },
  {
    "id": "api.oauth.allow_oauth.database.app_error",
    "translation": "server_error: Error accessing the database"
  },
  {
    "id": "api.oauth.allow_oauth.redirect_callback.app_error",
    "translation": "invalid_request: Supplied redirect_uri did not match registered callback_url"
  },
  {
    "id": "api.oauth.allow_oauth.turn_off.app_error",
    "translation": "The system admin has turned off OAuth service providing."
  },
  {
    "id": "api.oauth.get_auth_data.find.error",
    "translation": "Couldn't find auth code for code=%s"
  },
  {
    "id": "api.oauth.init.debug",
    "translation": "Initializing oauth api routes"
  },
  {
    "id": "api.oauth.register_oauth_app.turn_off.app_error",
    "translation": "The system admin has turned off OAuth service providing."
  },
  {
    "id": "api.oauth.revoke_access_token.del_code.app_error",
    "translation": "Error deleting authorization code from DB"
  },
  {
    "id": "api.oauth.revoke_access_token.del_session.app_error",
    "translation": "Error deleting session from DB"
  },
  {
    "id": "api.oauth.revoke_access_token.del_token.app_error",
    "translation": "Error deleting access token from DB"
  },
  {
    "id": "api.oauth.revoke_access_token.get.app_error",
    "translation": "Error getting access token from DB before deletion"
  },
  {
    "id": "api.post.create_post.bad_filename.error",
    "translation": "Bad filename discarded, filename=%v"
  },
  {
    "id": "api.post.create_post.channel_root_id.app_error",
    "translation": "Invalid ChannelId for RootId parameter"
  },
  {
    "id": "api.post.create_post.last_viewed.error",
    "translation": "Encountered error updating last viewed, channel_id=%s, user_id=%s, err=%v"
  },
  {
    "id": "api.post.create_post.parent_id.app_error",
    "translation": "Invalid ParentId parameter"
  },
  {
    "id": "api.post.create_post.root_id.app_error",
    "translation": "Invalid RootId parameter"
  },
  {
    "id": "api.post.create_webhook_post.creating.app_error",
    "translation": "Error creating post"
  },
  {
    "id": "api.post.delete_post.permissions.app_error",
    "translation": "You do not have the appropriate permissions"
  },
  {
    "id": "api.post.get_post.permissions.app_error",
    "translation": "You do not have the appropriate permissions"
  },
  {
    "id": "api.post.handle_post_events_and_forget.channel.error",
    "translation": "Encountered error getting channel, channel_id=%s, err=%v"
  },
  {
    "id": "api.post.handle_post_events_and_forget.team.error",
    "translation": "Encountered error getting team, team_id=%s, err=%v"
  },
  {
    "id": "api.post.handle_post_events_and_forget.user.error",
    "translation": "Encountered error getting user, user_id=%s, err=%v"
  },
  {
    "id": "api.post.handle_webhook_events_and_forget.create_post.error",
    "translation": "Failed to create response post, err=%v"
  },
  {
    "id": "api.post.handle_webhook_events_and_forget.event_post.error",
    "translation": "Event POST failed, err=%s"
  },
  {
    "id": "api.post.handle_webhook_events_and_forget.getting.error",
    "translation": "Encountered error getting webhooks by team, err=%v"
  },
  {
    "id": "api.post.init.debug",
    "translation": "Initializing post api routes"
  },
  {
    "id": "api.post.make_direct_channel_visible.get_2_members.error",
    "translation": "Failed to get 2 members for a direct channel channel_id=%v"
  },
  {
    "id": "api.post.make_direct_channel_visible.get_members.error",
    "translation": "Failed to get channel members channel_id=%v err=%v"
  },
  {
    "id": "api.post.make_direct_channel_visible.save_pref.error",
    "translation": "Failed to save direct channel preference user_id=%v other_user_id=%v err=%v"
  },
  {
    "id": "api.post.make_direct_channel_visible.update_pref.error",
    "translation": "Failed to update direct channel preference user_id=%v other_user_id=%v err=%v"
  },
  {
    "id": "api.post.send_notifications_and_forget.members.error",
    "translation": "Failed to get channel members channel_id=%v err=%v"
  },
  {
    "id": "api.post.send_notifications_and_forget.mention_body",
    "translation": "You have one new mention."
  },
  {
    "id": "api.post.send_notifications_and_forget.mention_subject",
    "translation": "New Mention"
  },
  {
    "id": "api.post.send_notifications_and_forget.message_body",
    "translation": "You have one new message."
  },
  {
    "id": "api.post.send_notifications_and_forget.message_subject",
    "translation": "New Direct Message"
  },
  {
    "id": "api.post.send_notifications_and_forget.push_mention",
    "translation": " mentioned you in "
  },
  {
    "id": "api.post.send_notifications_and_forget.push_message",
    "translation": " sent you a direct message"
  },
  {
    "id": "api.post.send_notifications_and_forget.push_notification.debug",
    "translation": "Sending push notification to %v wi msg of '%v'"
  },
  {
    "id": "api.post.send_notifications_and_forget.push_notification.error",
    "translation": "Failed to send push notificationid=%v, err=%v"
  },
  {
    "id": "api.post.send_notifications_and_forget.retrive_profiles.error",
    "translation": "Failed to retrieve user profiles team_id=%v, err=%v"
  },
  {
    "id": "api.post.send_notifications_and_forget.send.error",
    "translation": "Failed to send mention email successfully email=%v err=%v"
  },
  {
    "id": "api.post.send_notifications_and_forget.sent",
    "translation": "{{.Prefix}} {{.Filenames}} sent"
  },
  {
    "id": "api.post.send_notifications_and_forget.sessions.error",
    "translation": "Failed to retrieve sessions in notifications id=%v, err=%v"
  },
  {
    "id": "api.post.send_notifications_and_forget.user_id.error",
    "translation": "Post user_id not returned by GetProfiles user_id=%v"
  },
  {
    "id": "api.post.update_mention_count_and_forget.update_error",
    "translation": "Failed to update mention count for user_id=%v on channel_id=%v err=%v"
  },
  {
    "id": "api.post.update_post.find.app_error",
    "translation": "We couldn't find the existing post or comment to update."
  },
  {
    "id": "api.post.update_post.permissions.app_error",
    "translation": "You do not have the appropriate permissions"
  },
  {
    "id": "api.post.update_post.permissions_details.app_error",
    "translation": "Already deleted id={{.PostId}}"
  },
  {
    "id": "api.post_get_post_by_id.get.app_error",
    "translation": "Unable to get post"
  },
  {
    "id": "api.preference.init.debug",
    "translation": "Initializing preference api routes"
  },
  {
    "id": "api.preference.save_preferences.decode.app_error",
    "translation": "Unable to decode preferences from request"
  },
  {
    "id": "api.preference.save_preferences.set.app_error",
    "translation": "Unable to set preferences for other user"
  },
  {
    "id": "api.preference.save_preferences.set_details.app_error",
    "translation": "session.user_id={{.SessionUserId}}, preference.user_id={{.PreferenceUserId}}"
  },
  {
    "id": "api.server.new_server.init.info",
    "translation": "Server is initializing..."
  },
  {
    "id": "api.server.start_server.listening.info",
    "translation": "Server is listening on %v"
  },
  {
    "id": "api.server.start_server.rate.info",
    "translation": "RateLimiter is enabled"
  },
  {
    "id": "api.server.start_server.rate.warn",
    "translation": "RateLimitSettings not configured properly using VaryByHeader and disabling VaryByRemoteAddr"
  },
  {
    "id": "api.server.start_server.starting.critical",
    "translation": "Error starting server, err:%v"
  },
  {
    "id": "api.server.start_server.starting.info",
    "translation": "Starting Server..."
  },
  {
    "id": "api.server.start_server.starting.panic",
    "translation": "Error starting server "
  },
  {
    "id": "api.server.stop_server.stopped.info",
    "translation": "Server stopped"
  },
  {
    "id": "api.server.stop_server.stopping.info",
    "translation": "Stopping Server..."
  },
  {
    "id": "api.slackimport.slack_add_channels.added",
    "translation": "\r\n Channels Added \r\n"
  },
  {
    "id": "api.slackimport.slack_add_channels.import_failed",
    "translation": "Failed to import: {{.DisplayName}}\r\n"
  },
  {
    "id": "api.slackimport.slack_add_channels.import_failed.debug",
    "translation": "Failed to import: %s"
  },
  {
    "id": "api.slackimport.slack_add_channels.merge",
    "translation": "Merged with existing channel: {{.DisplayName}}\r\n"
  },
  {
    "id": "api.slackimport.slack_add_posts.bot.warn",
    "translation": "Slack bot posts are not imported yet"
  },
  {
    "id": "api.slackimport.slack_add_posts.msg_no_usr.debug",
    "translation": "Message without user"
  },
  {
    "id": "api.slackimport.slack_add_posts.unsupported.warn",
    "translation": "Unsupported post type: %v, %v"
  },
  {
    "id": "api.slackimport.slack_add_posts.user_no_exists.debug",
    "translation": "User: %v does not exist!"
  },
  {
    "id": "api.slackimport.slack_add_posts.without_user.debug",
    "translation": "Message without user"
  },
  {
    "id": "api.slackimport.slack_add_users.created",
    "translation": "\r\n Users Created\r\n"
  },
  {
    "id": "api.slackimport.slack_add_users.email_pwd",
    "translation": "Email, Password: {{.Email}}, {{.Password}}\r\n"
  },
  {
    "id": "api.slackimport.slack_add_users.unable_import",
    "translation": "Unable to import user: {{.Username}}\r\n"
  },
  {
    "id": "api.slackimport.slack_convert_timestamp.bad.warn",
    "translation": "Bad timestamp detected"
  },
  {
    "id": "api.slackimport.slack_import.log",
    "translation": "Mattermost Slack Import Log\r\n"
  },
  {
    "id": "api.slackimport.slack_import.note1",
    "translation": "- Some posts may not have been imported because they where not supported by this importer.\r\n"
  },
  {
    "id": "api.slackimport.slack_import.note2",
    "translation": "- Slack bot posts are currently not supported.\r\n"
  },
  {
    "id": "api.slackimport.slack_import.notes",
    "translation": "\r\n Notes \r\n"
  },
  {
    "id": "api.slackimport.slack_import.open.app_error",
    "translation": "Unable to open: {{.Filename}}"
  },
  {
    "id": "api.slackimport.slack_import.zip.app_error",
    "translation": "Unable to open zip file"
  },
  {
    "id": "api.team.create_team.email_disabled.app_error",
    "translation": "Team sign-up with email is disabled."
  },
  {
    "id": "api.team.create_team_from_signup.email_disabled.app_error",
    "translation": "Team sign-up with email is disabled."
  },
  {
    "id": "api.team.create_team_from_signup.expired_link.app_error",
    "translation": "The signup link has expired"
  },
  {
    "id": "api.team.create_team_from_signup.invalid_link.app_error",
    "translation": "The signup link does not appear to be valid"
  },
  {
    "id": "api.team.create_team_from_signup.unavailable.app_error",
    "translation": "This URL is unavailable. Please try another."
  },
  {
    "id": "api.team.email_teams.sending.error",
    "translation": "An error occurred while sending an email in emailTeams err=%v"
  },
  {
    "id": "api.team.export_team.admin.app_error",
    "translation": "Only a team admin can export data."
  },
  {
    "id": "api.team.import_team.admin.app_error",
    "translation": "Only a team admin can import data."
  },
  {
    "id": "api.team.import_team.array.app_error",
    "translation": "Empty array under 'file' in request"
  },
  {
    "id": "api.team.import_team.integer.app_error",
    "translation": "Filesize not an integer"
  },
  {
    "id": "api.team.import_team.no_file.app_error",
    "translation": "No file under 'file' in request"
  },
  {
    "id": "api.team.import_team.open.app_error",
    "translation": "Could not open file"
  },
  {
    "id": "api.team.import_team.parse.app_error",
    "translation": "Could not parse multipart form"
  },
  {
    "id": "api.team.import_team.unavailable.app_error",
    "translation": "Filesize unavilable"
  },
  {
    "id": "api.team.init.debug",
    "translation": "Initializing team api routes"
  },
  {
    "id": "api.team.invite_members.admin",
    "translation": "administrator"
  },
  {
    "id": "api.team.invite_members.already.app_error",
    "translation": "This person is already on your team"
  },
  {
    "id": "api.team.invite_members.member",
    "translation": "member"
  },
  {
    "id": "api.team.invite_members.no_one.app_error",
    "translation": "No one to invite."
  },
  {
    "id": "api.team.invite_members.send.error",
    "translation": "Failed to send invite email successfully err=%v"
  },
  {
    "id": "api.team.invite_members.sending.info",
    "translation": "sending invitation to %v %v"
  },
  {
    "id": "api.team.is_team_creation_allowed.disabled.app_error",
    "translation": "Team creation has been disabled. Please ask your systems administrator for details."
  },
  {
    "id": "api.team.is_team_creation_allowed.domain.app_error",
    "translation": "Email must be from a specific domain (e.g. @example.com). Please ask your systems administrator for details."
  },
  {
    "id": "api.team.permanent_delete_team.attempting.warn",
    "translation": "Attempting to permanently delete team %v id=%v"
  },
  {
    "id": "api.team.permanent_delete_team.deleted.warn",
    "translation": "Permanently deleted team %v id=%v"
  },
  {
    "id": "api.team.signup_team.email_disabled.app_error",
    "translation": "Team sign-up with email is disabled."
  },
  {
    "id": "api.team.update_team.permissions.app_error",
    "translation": "You do not have the appropriate permissions"
  },
  {
    "id": "api.templates.email_change_body.info",
    "translation": "You email address for {{.TeamDisplayName}} has been changed to {{.NewEmail}}.<br>If you did not make this change, please contact the system administrator."
  },
  {
    "id": "api.templates.email_change_body.title",
    "translation": "You updated your email"
  },
  {
    "id": "api.templates.email_change_subject",
    "translation": "Your email address has changed for {{.TeamDisplayName}}"
  },
  {
    "id": "api.templates.email_change_verify_body.button",
    "translation": "Verify Email"
  },
  {
    "id": "api.templates.email_change_verify_body.info",
    "translation": "To finish updating your email address for {{.TeamDisplayName}}, please click the link below to confirm this is the right address."
  },
  {
    "id": "api.templates.email_change_verify_body.title",
    "translation": "You updated your email"
  },
  {
    "id": "api.templates.email_change_verify_subject",
    "translation": "Verify new email address for {{.TeamDisplayName}}"
  },
  {
    "id": "api.templates.email_footer",
    "translation": "To change your notification preferences, log in to your team site and go to Account Settings > Notifications."
  },
  {
    "id": "api.templates.email_info",
    "translation": "Any questions at all, mail us any time: <a href='mailto:{{.FeedbackEmail}}' style='text-decoration: none; color:#2389D7;'>{{.FeedbackEmail}}</a>.<br>Best wishes,<br>The {{.SiteName}} Team<br>"
  },
  {
    "id": "api.templates.error.link",
    "translation": "Go back to Mattermost"
  },
  {
    "id": "api.templates.error.title",
    "translation": "{{ .SiteName }} needs your help:"
  },
  {
    "id": "api.templates.find_teams_body.found",
    "translation": "Your request to find teams associated with your email found the following:"
  },
  {
    "id": "api.templates.find_teams_body.not_found",
    "translation": "We could not find any teams for the given email."
  },
  {
    "id": "api.templates.find_teams_body.title",
    "translation": "Finding teams"
  },
  {
    "id": "api.templates.find_teams_subject",
    "translation": "Your {{ .SiteName }} Teams"
  },
  {
    "id": "api.templates.invite_body.button",
    "translation": "Join Team"
  },
  {
    "id": "api.templates.invite_body.extra_info",
    "translation": "Mattermost lets you share messages and files from your PC or phone, with instant search and archiving. After you’ve joined <strong>{{.TeamDisplayName}}</strong>, you can sign-in to your new team and access these features anytime from the web address:<br/><br/><a href='{{.TeamURL}}'>{{.TeamURL}}</a>"
  },
  {
    "id": "api.templates.invite_body.info",
    "translation": "The team {{.SenderStatus}} <strong>{{.SenderName}}</strong>, has invited you to join <strong>{{.TeamDisplayName}}</strong>."
  },
  {
    "id": "api.templates.invite_body.title",
    "translation": "You've been invited"
  },
  {
    "id": "api.templates.invite_subject",
    "translation": "{{ .SenderName }} invited you to join {{ .TeamDisplayName }} Team on {{.SiteName}}"
  },
  {
    "id": "api.templates.password_change_body.info",
    "translation": "Your password has been updated for {{.TeamDisplayName}} on {{ .TeamURL }} by {{.Method}}.<br>If this change wasn't initiated by you, please contact your system administrator."
  },
  {
    "id": "api.templates.password_change_body.title",
    "translation": "You updated your password"
  },
  {
    "id": "api.templates.password_change_subject",
    "translation": "Your password has been updated for {{.TeamDisplayName}} on {{ .SiteName }}"
  },
  {
    "id": "api.templates.post_body.button",
    "translation": "Go To Channel"
  },
  {
    "id": "api.templates.post_body.info",
    "translation": "CHANNEL: {{.ChannelName}}<br>{{.SenderName}} - {{.Hour}}:{{.Minute}} {{.TimeZone}}, {{.Month}} {{.Day}}"
  },
  {
    "id": "api.templates.post_subject",
    "translation": "{{.SubjectText}} on {{.TeamDisplayName}} at {{.Month}} {{.Day}}, {{.Year}}"
  },
  {
    "id": "api.templates.reset_body.button",
    "translation": "Reset Password"
  },
  {
    "id": "api.templates.reset_body.info",
    "translation": "To change your password, click \"Reset Password\" below.<br>If you did not mean to reset your password, please ignore this email and your password will remain the same. The password reset link expires in 24 hours."
  },
  {
    "id": "api.templates.reset_body.title",
    "translation": "You requested a password reset"
  },
  {
    "id": "api.templates.reset_subject",
    "translation": "Reset your password"
  },
  {
    "id": "api.templates.signin_change_email.body.method_email",
    "translation": "email and password"
  },
  {
    "id": "api.templates.signin_change_email.body.title",
    "translation": "You updated your sign-in method"
  },
  {
    "id": "api.templates.signup_team_body.button",
    "translation": "Set up your team"
  },
  {
    "id": "api.templates.signup_team_body.info",
    "translation": "{{ .SiteName }} is one place for all your team communication, searchable and available anywhere.<br>You'll get more out of {{ .SiteName }} when your team is in constant communication--let's get them on board."
  },
  {
    "id": "api.templates.signup_team_body.title",
    "translation": "Thanks for creating a team!"
  },
  {
    "id": "api.templates.signup_team_subject",
    "translation": "{{ .SiteName }} Team Setup"
  },
  {
    "id": "api.templates.singin_change_email.body.info",
    "translation": "You updated your sign-in method for {{.TeamDisplayName}} on {{ .TeamURL }} to {{.Method}}.<br>If this change wasn't initiated by you, please contact your system administrator."
  },
  {
    "id": "api.templates.singin_change_email.subject",
    "translation": "You updated your sign-in method for {{.TeamDisplayName}} on {{ .SiteName }}"
  },
  {
    "id": "api.templates.verify_body.button",
    "translation": "Verify Email"
  },
  {
    "id": "api.templates.verify_body.info",
    "translation": "Please verify your email address by clicking below."
  },
  {
    "id": "api.templates.verify_body.title",
    "translation": "You've joined the {{ .TeamDisplayName }} team"
  },
  {
    "id": "api.templates.verify_subject",
    "translation": "[{{ .TeamDisplayName }} {{ .SiteName }}] Email Verification"
  },
  {
    "id": "api.templates.welcome_body.button",
    "translation": "Verify Email"
  },
  {
    "id": "api.templates.welcome_body.info",
    "translation": "Please verify your email address by clicking below."
  },
  {
    "id": "api.templates.welcome_body.info2",
    "translation": "You can sign-in to your new team from the web address:"
  },
  {
    "id": "api.templates.welcome_body.info3",
    "translation": "Mattermost lets you share messages and files from your PC or phone, with instant search and archiving."
  },
  {
    "id": "api.templates.welcome_body.title",
    "translation": "You've joined the {{ .TeamDisplayName }} team"
  },
  {
    "id": "api.templates.welcome_subject",
    "translation": "You joined {{ .TeamDisplayName }}"
  },
  {
    "id": "api.user.add_direct_channels_and_forget.failed.error",
    "translation": "Failed to add direct channel preferences for user user_id=%s, team_id=%s, err=%v"
  },
  {
    "id": "api.user.authorize_oauth_user.bad_response.app_error",
    "translation": "Bad response from token request"
  },
  {
    "id": "api.user.authorize_oauth_user.bad_token.app_error",
    "translation": "Bad token type"
  },
  {
    "id": "api.user.authorize_oauth_user.invalid_state.app_error",
    "translation": "Invalid state"
  },
  {
    "id": "api.user.authorize_oauth_user.invalid_state_team.app_error",
    "translation": "Invalid state; missing team name"
  },
  {
    "id": "api.user.authorize_oauth_user.missing.app_error",
    "translation": "Missing access token"
  },
  {
    "id": "api.user.authorize_oauth_user.service.app_error",
    "translation": "Token request to {{.Service}} failed"
  },
  {
    "id": "api.user.authorize_oauth_user.token_failed.app_error",
    "translation": "Token request failed"
  },
  {
    "id": "api.user.authorize_oauth_user.unsupported.app_error",
    "translation": "Unsupported OAuth service provider"
  },
  {
    "id": "api.user.check_user_login_attempts.too_many.app_error",
    "translation": "Your account is locked because of too many failed password attempts. Please reset your password."
  },
  {
    "id": "api.user.check_user_password.invalid.app_error",
    "translation": "Login failed because of invalid password"
  },
  {
    "id": "api.user.complete_switch_with_oauth.blank_email.app_error",
    "translation": "Blank email"
  },
  {
    "id": "api.user.complete_switch_with_oauth.parse.app_error",
    "translation": "Could not parse auth data out of {{.Service}} user object"
  },
  {
    "id": "api.user.complete_switch_with_oauth.unavailable.app_error",
    "translation": "{{.Service}} oauth not available on this server"
  },
  {
    "id": "api.user.create_oauth_user.already_attached.app_error",
    "translation": "Team {{.DisplayName}} already has a user with the email address attached to your {{.Service}} account"
  },
  {
    "id": "api.user.create_oauth_user.already_used.app_error",
    "translation": "This {{.Service}} account has already been used to sign up for team {{.DisplayName}}"
  },
  {
    "id": "api.user.create_oauth_user.create.app_error",
    "translation": "Could not create user out of {{.Service}} user object"
  },
  {
    "id": "api.user.create_oauth_user.not_available.app_error",
    "translation": "{{.Service}} oauth not avlailable on this server"
  },
  {
    "id": "api.user.create_profile_image.default_font.app_error",
    "translation": "Could not create default profile image font"
  },
  {
    "id": "api.user.create_profile_image.encode.app_error",
    "translation": "Could not encode default profile image"
  },
  {
    "id": "api.user.create_profile_image.initial.app_error",
    "translation": "Could not add user initial to default profile picture"
  },
  {
    "id": "api.user.create_user.accepted_domain.app_error",
    "translation": "The email you provided does not belong to an accepted domain. Please contact your administrator or sign up with a different email."
  },
  {
    "id": "api.user.create_user.joining.error",
    "translation": "Encountered an issue joining default channels user_id=%s, team_id=%s, err=%v"
  },
  {
    "id": "api.user.create_user.save.error",
    "translation": "Couldn't save the user err=%v"
  },
  {
    "id": "api.user.create_user.signup_email_disabled.app_error",
    "translation": "User sign-up with email is disabled."
  },
  {
    "id": "api.user.create_user.signup_link_expired.app_error",
    "translation": "The signup link has expired"
  },
  {
    "id": "api.user.create_user.signup_link_invalid.app_error",
    "translation": "The signup link does not appear to be valid"
  },
  {
    "id": "api.user.create_user.team_name.app_error",
    "translation": "Invalid team name"
  },
  {
    "id": "api.user.create_user.tutorial.error",
    "translation": "Encountered error saving tutorial preference, err=%v"
  },
  {
    "id": "api.user.create_user.verified.error",
    "translation": "Failed to set email verified err=%v"
  },
  {
    "id": "api.user.get_authorization_code.unsupported.app_error",
    "translation": "Unsupported OAuth service provider"
  },
  {
    "id": "api.user.get_me.getting.error",
    "translation": "Error in getting users profile for id=%v forcing logout"
  },
  {
    "id": "api.user.init.debug",
    "translation": "Initializing user api routes"
  },
  {
    "id": "api.user.login.blank_pwd.app_error",
    "translation": "Password field must not be blank"
  },
  {
    "id": "api.user.login.inactive.app_error",
    "translation": "Login failed because your account has been set to inactive.  Please contact an administrator."
  },
  {
    "id": "api.user.login.not_provided.app_error",
    "translation": "Either user id or team name and user email must be provided"
  },
  {
    "id": "api.user.login.not_verified.app_error",
    "translation": "Login failed because email address has not been verified"
  },
  {
    "id": "api.user.login.revoking.app_error",
    "translation": "Revoking sessionId=%v for userId=%v re-login with same device Id"
  },
  {
    "id": "api.user.login_by_email.sign_in.app_error",
    "translation": "Please sign in using {{.AuthService}}"
  },
  {
    "id": "api.user.login_by_oauth.not_available.app_error",
    "translation": "{{.Service}} oauth not avlailable on this server"
  },
  {
    "id": "api.user.login_by_oauth.parse.app_error",
    "translation": "Could not parse auth data out of {{.Service}} user object"
  },
  {
    "id": "api.user.login_ldap.blank_pwd.app_error",
    "translation": "Password field must not be blank"
  },
  {
    "id": "api.user.login_ldap.disabled.app_error",
    "translation": "LDAP not enabled on this server"
  },
  {
    "id": "api.user.login_ldap.need_id.app_error",
    "translation": "Need an ID"
  },
  {
    "id": "api.user.login_ldap.not_available.app_error",
    "translation": "LDAP not available on this server"
  },
  {
    "id": "api.user.permanent_delete_user.attempting.warn",
    "translation": "Attempting to permanently delete account %v id=%v"
  },
  {
    "id": "api.user.permanent_delete_user.deleted.warn",
    "translation": "Permanently deleted account %v id=%v"
  },
  {
    "id": "api.user.permanent_delete_user.system_admin.warn",
    "translation": "You are deleting %v that is a system administrator.  You may need to set another account as the system administrator using the command line tools."
  },
  {
    "id": "api.user.reset_password.invalid_link.app_error",
    "translation": "The reset password link does not appear to be valid"
  },
  {
    "id": "api.user.reset_password.link_expired.app_error",
    "translation": "The password reset link has expired"
  },
  {
    "id": "api.user.reset_password.method",
    "translation": "using a reset password link"
  },
  {
    "id": "api.user.reset_password.sso.app_error",
    "translation": "Cannot reset password for SSO accounts"
  },
  {
    "id": "api.user.reset_password.wrong_team.app_error",
    "translation": "Trying to reset password for user on wrong team."
  },
  {
    "id": "api.user.send_email_change_email_and_forget.error",
    "translation": "Failed to send email change notification email successfully err=%v"
  },
  {
    "id": "api.user.send_email_change_verify_email_and_forget.error",
    "translation": "Failed to send email change verification email successfully err=%v"
  },
  {
    "id": "api.user.send_password_change_email_and_forget.error",
    "translation": "Failed to send update password email successfully err=%v"
  },
  {
    "id": "api.user.send_password_reset.find.app_error",
    "translation": "We couldn’t find an account with that address."
  },
  {
    "id": "api.user.send_password_reset.send.app_error",
    "translation": "Failed to send password reset email successfully"
  },
  {
    "id": "api.user.send_password_reset.sso.app_error",
    "translation": "Cannot reset password for SSO accounts"
  },
  {
    "id": "api.user.send_sign_in_change_email_and_forget.error",
    "translation": "Failed to send update password email successfully err=%v"
  },
  {
    "id": "api.user.send_verify_email_and_forget.failed.error",
    "translation": "Failed to send verification email successfully err=%v"
  },
  {
    "id": "api.user.send_welcome_email_and_forget.failed.error",
    "translation": "Failed to send welcome email successfully err=%v"
  },
  {
    "id": "api.user.switch_to_email.context.app_error",
    "translation": "Update password failed because context user_id did not match provided user's id"
  },
  {
    "id": "api.user.update_active.permissions.app_error",
    "translation": "You do not have the appropriate permissions"
  },
  {
    "id": "api.user.update_password.context.app_error",
    "translation": "Update password failed because context user_id did not match props user_id"
  },
  {
    "id": "api.user.update_password.failed.app_error",
    "translation": "Update password failed"
  },
  {
    "id": "api.user.update_password.incorrect.app_error",
    "translation": "The \"Current Password\" you entered is incorrect. Please check that Caps Lock is off and try again."
  },
  {
    "id": "api.user.update_password.menu",
    "translation": "using the settings menu"
  },
  {
    "id": "api.user.update_password.oauth.app_error",
    "translation": "Update password failed because the user is logged in through an OAuth service"
  },
  {
    "id": "api.user.update_password.valid_account.app_error",
    "translation": "Update password failed because we couldn't find a valid account"
  },
  {
    "id": "api.user.update_roles.one_admin.app_error",
    "translation": "There must be at least one active admin"
  },
  {
    "id": "api.user.update_roles.permissions.app_error",
    "translation": "You do not have the appropriate permissions"
  },
  {
    "id": "api.user.update_roles.system_admin_mod.app_error",
    "translation": "The system admin role can only by modified by another system admin"
  },
  {
    "id": "api.user.update_roles.system_admin_set.app_error",
    "translation": "The system admin role can only be set by another system admin"
  },
  {
    "id": "api.user.upload_profile_user.array.app_error",
    "translation": "Empty array under 'image' in request"
  },
  {
    "id": "api.user.upload_profile_user.decode.app_error",
    "translation": "Could not decode profile image"
  },
  {
    "id": "api.user.upload_profile_user.decode_config.app_error",
    "translation": "Could not decode profile image config."
  },
  {
    "id": "api.user.upload_profile_user.encode.app_error",
    "translation": "Could not encode profile image"
  },
  {
    "id": "api.user.upload_profile_user.no_file.app_error",
    "translation": "No file under 'image' in request"
  },
  {
    "id": "api.user.upload_profile_user.open.app_error",
    "translation": "Could not open image file"
  },
  {
    "id": "api.user.upload_profile_user.parse.app_error",
    "translation": "Could not parse multipart form"
  },
  {
    "id": "api.user.upload_profile_user.storage.app_error",
    "translation": "Unable to upload file. Image storage is not configured."
  },
  {
    "id": "api.user.upload_profile_user.too_large.app_error",
    "translation": "Unable to upload profile image. File is too large."
  },
  {
    "id": "api.user.upload_profile_user.upload_profile.app_error",
    "translation": "Couldn't upload profile image"
  },
  {
    "id": "api.web_conn.new_web_conn.last_activity.error",
    "translation": "Failed to update LastActivityAt for user_id=%v and session_id=%v, err=%v"
  },
  {
    "id": "api.web_conn.new_web_conn.last_ping.error",
    "translation": "Failed to update LastPingAt for user_id=%v, err=%v"
  },
  {
    "id": "api.web_hub.start.stopping.debug",
    "translation": "stopping %v connections"
  },
  {
    "id": "api.web_socket.connect.error",
    "translation": "websocket connect err: %v"
  },
  {
    "id": "api.web_socket.connect.upgrade.app_error",
    "translation": "Failed to upgrade websocket connection"
  },
  {
    "id": "api.web_socket.init.debug",
    "translation": "Initializing web socket api routes"
  },
  {
    "id": "api.web_team_hun.start.debug",
    "translation": "team hub stopping for teamId=%v"
  },
  {
    "id": "api.webhook.create_incoming.disabled.app_errror",
    "translation": "Incoming webhooks have been disabled by the system admin."
  },
  {
    "id": "api.webhook.create_outgoing.disabled.app_error",
    "translation": "Outgoing webhooks have been disabled by the system admin."
  },
  {
    "id": "api.webhook.create_outgoing.triggers.app_error",
    "translation": "Either trigger_words or channel_id must be set"
  },
  {
    "id": "api.webhook.delete_incoming.disabled.app_errror",
    "translation": "Incoming webhooks have been disabled by the system admin."
  },
  {
    "id": "api.webhook.delete_incoming.permissions.app_errror",
    "translation": "Inappropriate permissions to delete incoming webhook"
  },
  {
    "id": "api.webhook.delete_outgoing.disabled.app_error",
    "translation": "Outgoing webhooks have been disabled by the system admin."
  },
  {
    "id": "api.webhook.delete_outgoing.permissions.app_error",
    "translation": "Inappropriate permissions to delete outcoming webhook"
  },
  {
    "id": "api.webhook.get_incoming.disabled.app_error",
    "translation": "Incoming webhooks have been disabled by the system admin."
  },
  {
    "id": "api.webhook.get_outgoing.disabled.app_error",
    "translation": "Outgoing webhooks have been disabled by the system admin."
  },
  {
    "id": "api.webhook.init.debug",
    "translation": "Initializing webhook api routes"
  },
  {
    "id": "api.webhook.regen_outgoing_token.disabled.app_error",
    "translation": "Outgoing webhooks have been disabled by the system admin."
  },
  {
    "id": "api.webhook.regen_outgoing_token.permissions.app_error",
    "translation": "Inappropriate permissions to regenerate outcoming webhook token"
  },
  {
    "id": "manaultesting.get_channel_id.no_found.debug",
    "translation": "Could not find channel: %v, %v possibilites searched"
  },
  {
    "id": "manaultesting.get_channel_id.unable.debug",
    "translation": "Unable to get channels"
  },
  {
    "id": "manaultesting.manual_test.create.info",
    "translation": "Creating user and team"
  },
  {
    "id": "manaultesting.manual_test.parse.app_error",
    "translation": "Unable to parse URL"
  },
  {
    "id": "manaultesting.manual_test.setup.info",
    "translation": "Setting up for manual test..."
  },
  {
    "id": "manaultesting.manual_test.uid.debug",
    "translation": "No uid in url"
  },
  {
    "id": "manaultesting.test_autolink.info",
    "translation": "Manual Auto Link Test"
  },
  {
    "id": "manaultesting.test_autolink.unable.app_error",
    "translation": "Unable to get channels"
  },
  {
    "id": "mattermost.bulletin.subject",
    "translation": "Mattermost Security Bulletin"
  },
  {
    "id": "mattermost.config_file",
    "translation": "Loaded config file from %v"
  },
  {
    "id": "mattermost.current_version",
    "translation": "Current version is %v (%v/%v/%v)"
  },
  {
    "id": "mattermost.entreprise_enabled",
    "translation": "Enterprise Enabled: %v"
  },
  {
    "id": "mattermost.security_bulletin.error",
    "translation": "Failed to get security bulletin details"
  },
  {
    "id": "mattermost.security_bulletin_read.error",
    "translation": "Failed to read security bulletin details"
  },
  {
    "id": "mattermost.security_checks.debug",
    "translation": "Checking for security update from Mattermost"
  },
  {
    "id": "mattermost.security_info.error",
    "translation": "Failed to get security update information from Mattermost."
  },
  {
    "id": "mattermost.send_bulletin.info",
    "translation": "Sending security bulletin for %v to %v"
  },
  {
    "id": "mattermost.system_admins.error",
    "translation": "Failed to get system admins for security update information from Mattermost."
  },
  {
    "id": "mattermost.working_dir",
    "translation": "Current working directory is %v"
  },
  {
    "id": "model.access.is_valid.access_token.app_error",
    "translation": "Invalid access token"
  },
  {
    "id": "model.access.is_valid.auth_code.app_error",
    "translation": "Invalid auth code"
  },
  {
    "id": "model.access.is_valid.redirect_uri.app_error",
    "translation": "Invalid redirect uri"
  },
  {
    "id": "model.access.is_valid.refresh_token.app_error",
    "translation": "Invalid refresh token"
  },
  {
    "id": "model.authorize.is_valid.auth_code.app_error",
    "translation": "Invalid authorization code"
  },
  {
    "id": "model.authorize.is_valid.client_id.app_error",
    "translation": "Invalid client id"
  },
  {
    "id": "model.authorize.is_valid.create_at.app_error",
    "translation": "Create at must be a valid time"
  },
  {
    "id": "model.authorize.is_valid.expires.app_error",
    "translation": "Expires in must be set"
  },
  {
    "id": "model.authorize.is_valid.redirect_uri.app_error",
    "translation": "Invalid redirect uri"
  },
  {
    "id": "model.authorize.is_valid.scope.app_error",
    "translation": "Invalid scope"
  },
  {
    "id": "model.authorize.is_valid.state.app_error",
    "translation": "Invalid state"
  },
  {
    "id": "model.authorize.is_valid.user_id.app_error",
    "translation": "Invalid user id"
  },
  {
    "id": "model.channel.is_valid.2_or_more.app_error",
    "translation": "Name must be 2 or more lowercase alphanumeric characters"
  },
  {
    "id": "model.channel.is_valid.create_at.app_error",
    "translation": "Create at must be a valid time"
  },
  {
    "id": "model.channel.is_valid.creator_id.app_error",
    "translation": "Invalid creator id"
  },
  {
    "id": "model.channel.is_valid.display_name.app_error",
    "translation": "Invalid display name"
  },
  {
    "id": "model.channel.is_valid.header.app_error",
    "translation": "Invalid header"
  },
  {
    "id": "model.channel.is_valid.id.app_error",
    "translation": "Invalid Id"
  },
  {
    "id": "model.channel.is_valid.name.app_error",
    "translation": "Invalid name"
  },
  {
    "id": "model.channel.is_valid.purpose.app_error",
    "translation": "Invalid purpose"
  },
  {
    "id": "model.channel.is_valid.type.app_error",
    "translation": "Invalid type"
  },
  {
    "id": "model.channel.is_valid.update_at.app_error",
    "translation": "Update at must be a valid time"
  },
  {
    "id": "model.channel_member.is_valid.channel_id.app_error",
    "translation": "Invalid channel id"
  },
  {
    "id": "model.channel_member.is_valid.notify_level.app_error",
    "translation": "Invalid notify level"
  },
  {
    "id": "model.channel_member.is_valid.role.app_error",
    "translation": "Invalid role"
  },
  {
    "id": "model.channel_member.is_valid.unread_level.app_error",
    "translation": "Invalid mark unread level"
  },
  {
    "id": "model.channel_member.is_valid.user_id.app_error",
    "translation": "Invalid user id"
  },
  {
    "id": "model.client.connecting.app_error",
    "translation": "We encountered an error while connecting to the server"
  },
  {
    "id": "model.client.login.app_error",
    "translation": "Authentication tokens didn't match"
  },
  {
    "id": "model.config.is_valid.email_reset_salt.app_error",
    "translation": "Invalid password reset salt for email settings.  Must be 32 chars or more."
  },
  {
    "id": "model.config.is_valid.email_salt.app_error",
    "translation": "Invalid invite salt for email settings.  Must be 32 chars or more."
  },
  {
    "id": "model.config.is_valid.email_security.app_error",
    "translation": "Invalid connection security for email settings.  Must be '', 'TLS', or 'STARTTLS'"
  },
  {
    "id": "model.config.is_valid.encrypt_sql.app_error",
    "translation": "Invalid at rest encrypt key for SQL settings.  Must be 32 chars or more."
  },
  {
    "id": "model.config.is_valid.file_driver.app_error",
    "translation": "Invalid driver name for file settings.  Must be 'local' or 'amazons3'"
  },
  {
    "id": "model.config.is_valid.file_preview_height.app_error",
    "translation": "Invalid preview height for file settings.  Must be a zero or positive number."
  },
  {
    "id": "model.config.is_valid.file_preview_width.app_error",
    "translation": "Invalid preview width for file settings.  Must be a positive number."
  },
  {
    "id": "model.config.is_valid.file_profile_height.app_error",
    "translation": "Invalid profile height for file settings.  Must be a positive number."
  },
  {
    "id": "model.config.is_valid.file_profile_width.app_error",
    "translation": "Invalid profile width for file settings.  Must be a positive number."
  },
  {
    "id": "model.config.is_valid.file_salt.app_error",
    "translation": "Invalid public link salt for file settings.  Must be 32 chars or more."
  },
  {
    "id": "model.config.is_valid.file_thumb_height.app_error",
    "translation": "Invalid thumbnail height for file settings.  Must be a positive number."
  },
  {
    "id": "model.config.is_valid.file_thumb_width.app_error",
    "translation": "Invalid thumbnail width for file settings.  Must be a positive number."
  },
  {
    "id": "model.config.is_valid.listen_address.app_error",
    "translation": "Invalid listen address for service settings Must be set."
  },
  {
    "id": "model.config.is_valid.login_attempts.app_error",
    "translation": "Invalid maximum login attempts for service settings.  Must be a positive number."
  },
  {
    "id": "model.config.is_valid.max_users.app_error",
    "translation": "Invalid maximum users per team for team settings.  Must be a positive number."
  },
  {
    "id": "model.config.is_valid.rate_mem.app_error",
    "translation": "Invalid memory store size for rate limit settings.  Must be a positive number"
  },
  {
    "id": "model.config.is_valid.rate_sec.app_error",
    "translation": "Invalid per sec for rate limit settings.  Must be a positive number"
  },
  {
    "id": "model.config.is_valid.sql_data_src.app_error",
    "translation": "Invalid data source for SQL settings.  Must be set."
  },
  {
    "id": "model.config.is_valid.sql_driver.app_error",
    "translation": "Invalid driver name for SQL settings.  Must be 'mysql' or 'postgres'"
  },
  {
    "id": "model.config.is_valid.sql_idle.app_error",
    "translation": "Invalid maximum idle connection for SQL settings.  Must be a positive number."
  },
  {
    "id": "model.config.is_valid.sql_max_conn.app_error",
    "translation": "Invalid maximum open connection for SQL settings.  Must be a positive number."
  },
  {
    "id": "model.file_info.get.gif.app_error",
    "translation": "Could not decode gif."
  },
  {
    "id": "model.incoming_hook.channel_id.app_error",
    "translation": "Invalid channel id"
  },
  {
    "id": "model.incoming_hook.create_at.app_error",
    "translation": "Create at must be a valid time"
  },
  {
    "id": "model.incoming_hook.id.app_error",
    "translation": "Invalid Id"
  },
  {
    "id": "model.incoming_hook.team_id.app_error",
    "translation": "Invalid team id"
  },
  {
    "id": "model.incoming_hook.update_at.app_error",
    "translation": "Update at must be a valid time"
  },
  {
    "id": "model.incoming_hook.user_id.app_error",
    "translation": "Invalid user id"
  },
  {
    "id": "model.oauth.is_valid.app_id.app_error",
    "translation": "Invalid app id"
  },
  {
    "id": "model.oauth.is_valid.callback.app_error",
    "translation": "Invalid callback urls"
  },
  {
    "id": "model.oauth.is_valid.client_secret.app_error",
    "translation": "Invalid client secret"
  },
  {
    "id": "model.oauth.is_valid.create_at.app_error",
    "translation": "Create at must be a valid time"
  },
  {
    "id": "model.oauth.is_valid.creator_id.app_error",
    "translation": "Invalid creator id"
  },
  {
    "id": "model.oauth.is_valid.description.app_error",
    "translation": "Invalid description"
  },
  {
    "id": "model.oauth.is_valid.homepage.app_error",
    "translation": "Invalid homepage"
  },
  {
    "id": "model.oauth.is_valid.name.app_error",
    "translation": "Invalid name"
  },
  {
    "id": "model.oauth.is_valid.update_at.app_error",
    "translation": "Update at must be a valid time"
  },
  {
    "id": "model.outgoing_hook.is_valid.callback.app_error",
    "translation": "Invalid callback urls"
  },
  {
    "id": "model.outgoing_hook.is_valid.channel_id.app_error",
    "translation": "Invalid channel id"
  },
  {
    "id": "model.outgoing_hook.is_valid.create_at.app_error",
    "translation": "Create at must be a valid time"
  },
  {
    "id": "model.outgoing_hook.is_valid.id.app_error",
    "translation": "Invalid Id"
  },
  {
    "id": "model.outgoing_hook.is_valid.team_id.app_error",
    "translation": "Invalid team id"
  },
  {
    "id": "model.outgoing_hook.is_valid.token.app_error",
    "translation": "Invalid token"
  },
  {
    "id": "model.outgoing_hook.is_valid.update_at.app_error",
    "translation": "Update at must be a valid time"
  },
  {
    "id": "model.outgoing_hook.is_valid.url.app_error",
    "translation": "Invalid callback URLs. Each must be a valid URL and start with http:// or https://"
  },
  {
    "id": "model.outgoing_hook.is_valid.user_id.app_error",
    "translation": "Invalid user id"
  },
  {
    "id": "model.outgoing_hook.is_valid.words.app_error",
    "translation": "Invalid trigger words"
  },
  {
    "id": "model.post.is_valid.channel_id.app_error",
    "translation": "Invalid channel id"
  },
  {
    "id": "model.post.is_valid.create_at.app_error",
    "translation": "Create at must be a valid time"
  },
  {
    "id": "model.post.is_valid.filenames.app_error",
    "translation": "Invalid filenames"
  },
  {
    "id": "model.post.is_valid.hashtags.app_error",
    "translation": "Invalid hashtags"
  },
  {
    "id": "model.post.is_valid.id.app_error",
    "translation": "Invalid Id"
  },
  {
    "id": "model.post.is_valid.msg.app_error",
    "translation": "Invalid message"
  },
  {
    "id": "model.post.is_valid.original_id.app_error",
    "translation": "Invalid original id"
  },
  {
    "id": "model.post.is_valid.parent_id.app_error",
    "translation": "Invalid parent id"
  },
  {
    "id": "model.post.is_valid.props.app_error",
    "translation": "Invalid props"
  },
  {
    "id": "model.post.is_valid.root_id.app_error",
    "translation": "Invalid root id"
  },
  {
    "id": "model.post.is_valid.root_parent.app_error",
    "translation": "Invalid root id must be set if parent id set"
  },
  {
    "id": "model.post.is_valid.type.app_error",
    "translation": "Invalid type"
  },
  {
    "id": "model.post.is_valid.update_at.app_error",
    "translation": "Update at must be a valid time"
  },
  {
    "id": "model.post.is_valid.user_id.app_error",
    "translation": "Invalid user id"
  },
  {
    "id": "model.preference.is_valid.category.app_error",
    "translation": "Invalid category"
  },
  {
    "id": "model.preference.is_valid.id.app_error",
    "translation": "Invalid user id"
  },
  {
    "id": "model.preference.is_valid.name.app_error",
    "translation": "Invalid name"
  },
  {
    "id": "model.preference.is_valid.value.app_error",
    "translation": "Value is too long"
  },
  {
    "id": "model.team.is_valid.characters.app_error",
    "translation": "Name must be 4 or more lowercase alphanumeric characters"
  },
  {
    "id": "model.team.is_valid.company.app_error",
    "translation": "Invalid company name"
  },
  {
    "id": "model.team.is_valid.create_at.app_error",
    "translation": "Create at must be a valid time"
  },
  {
    "id": "model.team.is_valid.domains.app_error",
    "translation": "Invalid allowed domains"
  },
  {
    "id": "model.team.is_valid.email.app_error",
    "translation": "Invalid email"
  },
  {
    "id": "model.team.is_valid.id.app_error",
    "translation": "Invalid Id"
  },
  {
    "id": "model.team.is_valid.name.app_error",
    "translation": "Invalid name"
  },
  {
    "id": "model.team.is_valid.reserved.app_error",
    "translation": "This URL is unavailable. Please try another."
  },
  {
    "id": "model.team.is_valid.type.app_error",
    "translation": "Invalid type"
  },
  {
    "id": "model.team.is_valid.update_at.app_error",
    "translation": "Update at must be a valid time"
  },
  {
    "id": "model.team.is_valid.url.app_error",
    "translation": "Invalid URL Identifier"
  },
  {
    "id": "model.user.is_valid.auth_data.app_error",
    "translation": "Invalid auth data"
  },
  {
    "id": "model.user.is_valid.auth_data_pwd.app_error",
    "translation": "Invalid user, password and auth data cannot both be set"
  },
  {
    "id": "model.user.is_valid.auth_data_type.app_error",
    "translation": "Invalid user, auth data must be set with auth type"
  },
  {
    "id": "model.user.is_valid.create_at.app_error",
    "translation": "Create at must be a valid time"
  },
  {
    "id": "model.user.is_valid.email.app_error",
    "translation": "Invalid email"
  },
  {
    "id": "model.user.is_valid.first_name.app_error",
    "translation": "Invalid first name"
  },
  {
    "id": "model.user.is_valid.id.app_error",
    "translation": "Invalid user id"
  },
  {
    "id": "model.user.is_valid.last_name.app_error",
    "translation": "Invalid last name"
  },
  {
    "id": "model.user.is_valid.nickname.app_error",
    "translation": "Invalid nickname"
  },
  {
    "id": "model.user.is_valid.pwd.app_error",
    "translation": "Invalid password"
  },
  {
    "id": "model.user.is_valid.team_id.app_error",
    "translation": "Invalid team id"
  },
  {
    "id": "model.user.is_valid.theme.app_error",
    "translation": "Invalid theme"
  },
  {
    "id": "model.user.is_valid.update_at.app_error",
    "translation": "Update at must be a valid time"
  },
  {
    "id": "model.user.is_valid.username.app_error",
    "translation": "Invalid username"
  },
  {
    "id": "model.utils.decode_json.app_error",
    "translation": "could not decode"
  },
  {
    "id": "store.sql.check_index.critical",
    "translation": "Failed to check index %v"
  },
  {
    "id": "store.sql.closing.info",
    "translation": "Closing SqlStore"
  },
  {
    "id": "store.sql.column_exists.critical",
    "translation": "Failed to check if column exists %v"
  },
  {
    "id": "store.sql.column_exists_missing_driver.critical",
    "translation": "Failed to check if column exists because of missing driver"
  },
  {
    "id": "store.sql.convert_encrypt_string_map",
    "translation": "FromDb: Unable to convert EncryptStringMap to *string"
  },
  {
    "id": "store.sql.convert_string_array",
    "translation": "FromDb: Unable to convert StringArray to *string"
  },
  {
    "id": "store.sql.convert_string_interface",
    "translation": "FromDb: Unable to convert StringInterface to *string"
  },
  {
    "id": "store.sql.convert_string_map",
    "translation": "FromDb: Unable to convert StringMap to *string"
  },
  {
    "id": "store.sql.create_column.critical",
    "translation": "Failed to create column %v"
  },
  {
    "id": "store.sql.create_column_missing_driver.critical",
    "translation": "Failed to create column because of missing driver"
  },
  {
    "id": "store.sql.create_index.critical",
    "translation": "Failed to create index %v"
  },
  {
    "id": "store.sql.create_index_missing_driver.critical",
    "translation": "Failed to create index because of missing driver"
  },
  {
    "id": "store.sql.creating_tables.critical",
    "translation": "Error creating database tables: %v"
  },
  {
    "id": "store.sql.dialect_driver.critical",
    "translation": "Failed to create dialect specific driver"
  },
  {
    "id": "store.sql.dialect_driver.panic",
    "translation": "Failed to create dialect specific driver %v"
  },
  {
    "id": "store.sql.drop_column.critical",
    "translation": "Failed to drop column %v"
  },
  {
    "id": "store.sql.incorrect_mac",
    "translation": "Incorrect MAC for the given ciphertext"
  },
  {
    "id": "store.sql.open_conn.critical",
    "translation": "Failed to open sql connection to err:%v"
  },
  {
    "id": "store.sql.open_conn.panic",
    "translation": "Failed to open sql connection %v"
  },
  {
    "id": "store.sql.ping.critical",
    "translation": "Failed to ping db err:%v"
  },
  {
    "id": "store.sql.pinging.info",
    "translation": "Pinging sql %v database"
  },
  {
    "id": "store.sql.rename_column.critical",
    "translation": "Failed to rename column %v"
  },
  {
    "id": "store.sql.schema_out_of_date.warn",
    "translation": "The database schema version of %v appears to be out of date"
  },
  {
    "id": "store.sql.schema_set.info",
    "translation": "The database schema has been set to version %v"
  },
  {
    "id": "store.sql.schema_upgrade_attempt.warn",
    "translation": "Attempting to upgrade the database schema version to %v"
  },
  {
    "id": "store.sql.schema_version.critical",
    "translation": "The database schema version of %v cannot be upgraded.  You must not skip a version."
  },
  {
    "id": "store.sql.short_ciphertext",
    "translation": "short ciphertext"
  },
  {
    "id": "store.sql.table_column_type.critical",
    "translation": "Failed to get data type for column %s from table %s: %v"
  },
  {
    "id": "store.sql.table_exists.critical",
    "translation": "Failed to check if table exists %v"
  },
  {
    "id": "store.sql.too_short_ciphertext",
    "translation": "ciphertext too short"
  },
  {
    "id": "store.sql.upgraded.warn",
    "translation": "The database schema has been upgraded to version %v"
  },
  {
    "id": "store.sql_audit.get.finding.app_error",
    "translation": "We encountered an error finding the audits"
  },
  {
    "id": "store.sql_audit.get.limit.app_error",
    "translation": "Limit exceeded for paging"
  },
  {
    "id": "store.sql_audit.permanent_delete_by_user.app_error",
    "translation": "We encountered an error deleting the audits"
  },
  {
    "id": "store.sql_audit.save.saving.app_error",
    "translation": "We encountered an error saving the audit"
  },
  {
    "id": "store.sql_channel.analytics_type_count.app_error",
    "translation": "We couldn't get channel type counts"
  },
  {
    "id": "store.sql_channel.check_open_channel_permissions.app_error",
    "translation": "We couldn't check the permissions"
  },
  {
    "id": "store.sql_channel.check_permissions.app_error",
    "translation": "We couldn't check the permissions"
  },
  {
    "id": "store.sql_channel.check_permissions_by_name.app_error",
    "translation": "We couldn't check the permissions"
  },
  {
    "id": "store.sql_channel.delete.channel.app_error",
    "translation": "We couldn't delete the channel"
  },
  {
    "id": "store.sql_channel.extra_updated.app_error",
    "translation": "Problem updating members last updated time"
  },
  {
    "id": "store.sql_channel.get.existing.app_error",
    "translation": "We couldn't find the existing channel"
  },
  {
    "id": "store.sql_channel.get.find.app_error",
    "translation": "We encountered an error finding the channel"
  },
  {
    "id": "store.sql_channel.get_by_name.existing.app_error",
    "translation": "We couldn't find the existing channel"
  },
  {
    "id": "store.sql_channel.get_channel_counts.get.app_error",
    "translation": "We couldn't get the channel counts"
  },
  {
    "id": "store.sql_channel.get_channels.get.app_error",
    "translation": "We couldn't get the channels"
  },
  {
    "id": "store.sql_channel.get_channels.not_found.app_error",
    "translation": "No channels were found"
  },
  {
    "id": "store.sql_channel.get_extra_members.app_error",
    "translation": "We couldn't get the extra info for channel members"
  },
  {
    "id": "store.sql_channel.get_for_export.app_error",
    "translation": "We couldn't get all the channels"
  },
  {
    "id": "store.sql_channel.get_member.app_error",
    "translation": "We couldn't get the channel member"
  },
  {
    "id": "store.sql_channel.get_member_count.app_error",
    "translation": "We couldn't get the channel member count"
  },
  {
    "id": "store.sql_channel.get_members.app_error",
    "translation": "We couldn't get the channel members"
  },
  {
    "id": "store.sql_channel.get_more_channels.get.app_error",
    "translation": "We couldn't get the channels"
  },
  {
    "id": "store.sql_channel.increment_mention_count.app_error",
    "translation": "We couldn't increment the mention count"
  },
  {
    "id": "store.sql_channel.permanent_delete_by_team.app_error",
    "translation": "We couldn't delete the channels"
  },
  {
    "id": "store.sql_channel.permanent_delete_members_by_user.app_error",
    "translation": "We couldn't remove the channel member"
  },
  {
    "id": "store.sql_channel.remove_member.app_error",
    "translation": "We couldn't remove the channel member"
  },
  {
    "id": "store.sql_channel.save.commit_transaction.app_error",
    "translation": "Unable to commit transaction"
  },
  {
    "id": "store.sql_channel.save.direct_channel.app_error",
    "translation": "Use SaveDirectChannel to create a direct channel"
  },
  {
    "id": "store.sql_channel.save.open_transaction.app_error",
    "translation": "Unable to open transaction"
  },
  {
    "id": "store.sql_channel.save_channel.current_count.app_error",
    "translation": "Failed to get current channel count"
  },
  {
    "id": "store.sql_channel.save_channel.existing.app_error",
    "translation": "Must call update for exisiting channel"
  },
  {
    "id": "store.sql_channel.save_channel.exists.app_error",
    "translation": "A channel with that URL already exists"
  },
  {
    "id": "store.sql_channel.save_channel.limit.app_error",
    "translation": "You've reached the limit of the number of allowed channels."
  },
  {
    "id": "store.sql_channel.save_channel.previously.app_error",
    "translation": "A channel with that URL was previously created"
  },
  {
    "id": "store.sql_channel.save_channel.save.app_error",
    "translation": "We couldn't save the channel"
  },
  {
    "id": "store.sql_channel.save_direct_channel.add_members.app_error",
    "translation": "Unable to add direct channel members"
  },
  {
    "id": "store.sql_channel.save_direct_channel.commit.app_error",
    "translation": "Unable to commit transaction"
  },
  {
    "id": "store.sql_channel.save_direct_channel.not_direct.app_error",
    "translation": "Not a direct channel attempted to be created with SaveDirectChannel"
  },
  {
    "id": "store.sql_channel.save_direct_channel.open_transaction.app_error",
    "translation": "Unable to open transaction"
  },
  {
    "id": "store.sql_channel.save_member.commit_transaction.app_error",
    "translation": "Unable to commit transaction"
  },
  {
    "id": "store.sql_channel.save_member.exists.app_error",
    "translation": "A channel member with that id already exists"
  },
  {
    "id": "store.sql_channel.save_member.open_transaction.app_error",
    "translation": "Unable to open transaction"
  },
  {
    "id": "store.sql_channel.save_member.save.app_error",
    "translation": "We couldn't save the channel member"
  },
  {
    "id": "store.sql_channel.update.app_error",
    "translation": "We couldn't update the channel"
  },
  {
    "id": "store.sql_channel.update.exists.app_error",
    "translation": "A channel with that handle already exists"
  },
  {
    "id": "store.sql_channel.update.previously.app_error",
    "translation": "A channel with that handle was previously created"
  },
  {
    "id": "store.sql_channel.update.updating.app_error",
    "translation": "We encountered an error updating the channel"
  },
  {
    "id": "store.sql_channel.update_last_viewed_at.app_error",
    "translation": "We couldn't update the last viewed at time"
  },
  {
    "id": "store.sql_channel.update_member.app_error",
    "translation": "We encountered an error updating the channel member"
  },
  {
    "id": "store.sql_oauth.get_access_data.app_error",
    "translation": "We encountered an error finding the access token"
  },
  {
    "id": "store.sql_oauth.get_access_data_by_code.app_error",
    "translation": "We encountered an error finding the access token"
  },
  {
    "id": "store.sql_oauth.get_app.find.app_error",
    "translation": "We couldn't find the existing app"
  },
  {
    "id": "store.sql_oauth.get_app.finding.app_error",
    "translation": "We encountered an error finding the app"
  },
  {
    "id": "store.sql_oauth.get_app_by_user.find.app_error",
    "translation": "We couldn't find any existing apps"
  },
  {
    "id": "store.sql_oauth.get_auth_data.find.app_error",
    "translation": "We couldn't find the existing authorization code"
  },
  {
    "id": "store.sql_oauth.get_auth_data.finding.app_error",
    "translation": "We encountered an error finding the authorization code"
  },
  {
    "id": "store.sql_oauth.permanent_delete_auth_data_by_user.app_error",
    "translation": "We couldn't remove the authorization code"
  },
  {
    "id": "store.sql_oauth.remove_access_data.app_error",
    "translation": "We couldn't remove the access token"
  },
  {
    "id": "store.sql_oauth.remove_auth_data.app_error",
    "translation": "We couldn't remove the authorization code"
  },
  {
    "id": "store.sql_oauth.save_access_data.app_error",
    "translation": "We couldn't save the access token."
  },
  {
    "id": "store.sql_oauth.save_app.existing.app_error",
    "translation": "Must call update for exisiting app"
  },
  {
    "id": "store.sql_oauth.save_app.save.app_error",
    "translation": "We couldn't save the app."
  },
  {
    "id": "store.sql_oauth.save_auth_data.app_error",
    "translation": "We couldn't save the authorization code."
  },
  {
    "id": "store.sql_oauth.update_app.find.app_error",
    "translation": "We couldn't find the existing app to update"
  },
  {
    "id": "store.sql_oauth.update_app.finding.app_error",
    "translation": "We encountered an error finding the app"
  },
  {
    "id": "store.sql_oauth.update_app.update.app_error",
    "translation": "We couldn't update the app"
  },
  {
    "id": "store.sql_oauth.update_app.updating.app_error",
    "translation": "We encountered an error updating the app"
  },
  {
    "id": "store.sql_post.analytics_posts_count.app_error",
    "translation": "We couldn't get post counts"
  },
  {
    "id": "store.sql_post.analytics_posts_count_by_day.app_error",
    "translation": "We couldn't get post counts by day"
  },
  {
    "id": "store.sql_post.analytics_user_counts_posts_by_day.app_error",
    "translation": "We couldn't get user counts with posts"
  },
  {
    "id": "store.sql_post.delete.app_error",
    "translation": "We couldn't delete the post"
  },
  {
    "id": "store.sql_post.get.app_error",
    "translation": "We couldn't get the post"
  },
  {
    "id": "store.sql_post.get_for_export.app_error",
    "translation": "We couldn't get the posts for the channel"
  },
  {
    "id": "store.sql_post.get_parents_posts.app_error",
    "translation": "We couldn't get the parent post for the channel"
  },
  {
    "id": "store.sql_post.get_posts.app_error",
    "translation": "Limit exceeded for paging"
  },
  {
    "id": "store.sql_post.get_posts_around.get.app_error",
    "translation": "We couldn't get the posts for the channel"
  },
  {
    "id": "store.sql_post.get_posts_around.get_parent.app_error",
    "translation": "We couldn't get the parent posts for the channel"
  },
  {
    "id": "store.sql_post.get_posts_since.app_error",
    "translation": "We couldn't get the posts for the channel"
  },
  {
    "id": "store.sql_post.get_root_posts.app_error",
    "translation": "We couldn't get the posts for the channel"
  },
  {
    "id": "store.sql_post.permanent_delete.app_error",
    "translation": "We couldn't delete the post"
  },
  {
    "id": "store.sql_post.permanent_delete_all_comments_by_user.app_error",
    "translation": "We couldn't delete the comments for user"
  },
  {
    "id": "store.sql_post.permanent_delete_by_user.app_error",
    "translation": "We couldn't select the posts to delete for the user"
  },
  {
    "id": "store.sql_post.permanent_delete_by_user.too_many.app_error",
    "translation": "We couldn't select the posts to delete for the user (too many), please re-run"
  },
  {
    "id": "store.sql_post.save.app_error",
    "translation": "We couldn't save the Post"
  },
  {
    "id": "store.sql_post.save.existing.app_error",
    "translation": "You cannot update an existing Post"
  },
  {
    "id": "store.sql_post.search.app_error",
    "translation": "We encountered an error while searching for posts"
  },
  {
    "id": "store.sql_post.update.app_error",
    "translation": "We couldn't update the Post"
  },
  {
    "id": "store.sql_preference.delete_unused_features.debug",
    "translation": "Deleting any unused pre-release features"
  },
  {
    "id": "store.sql_preference.get.app_error",
    "translation": "We encountered an error while finding preferences"
  },
  {
    "id": "store.sql_preference.get_all.app_error",
    "translation": "We encountered an error while finding preferences"
  },
  {
    "id": "store.sql_preference.get_category.app_error",
    "translation": "We encountered an error while finding preferences"
  },
  {
    "id": "store.sql_preference.insert.exists.app_error",
    "translation": "A preference with that user id, category, and name already exists"
  },
  {
    "id": "store.sql_preference.insert.save.app_error",
    "translation": "We couldn't save the preference"
  },
  {
    "id": "store.sql_preference.is_feature_enabled.app_error",
    "translation": "We encountered an error while finding a pre release feature preference"
  },
  {
    "id": "store.sql_preference.permanent_delete_by_user.app_error",
    "translation": "We encountered an error while deleteing preferences"
  },
  {
    "id": "store.sql_preference.save.commit_transaction.app_error",
    "translation": "Unable to commit transaction to save preferences"
  },
  {
    "id": "store.sql_preference.save.missing_driver.app_error",
    "translation": "We encountered an error while updating preferences"
  },
  {
    "id": "store.sql_preference.save.open_transaction.app_error",
    "translation": "Unable to open transaction to save preferences"
  },
  {
    "id": "store.sql_preference.save.rollback_transaction.app_error",
    "translation": "Unable to rollback transaction to save preferences"
  },
  {
    "id": "store.sql_preference.save.updating.app_error",
    "translation": "We encountered an error while updating preferences"
  },
  {
    "id": "store.sql_preference.update.app_error",
    "translation": "We couldn't update the preference"
  },
  {
    "id": "store.sql_session.cleanup_expired_sessions.app_error",
    "translation": "We encountered an error while deleting expired user sessions"
  },
  {
    "id": "store.sql_session.get.app_error",
    "translation": "We encountered an error finding the session"
  },
  {
    "id": "store.sql_session.get_sessions.app_error",
    "translation": "We encountered an error while finding user sessions"
  },
  {
    "id": "store.sql_session.get_sessions.error",
    "translation": "Failed to cleanup sessions in getSessions err=%v"
  },
  {
    "id": "store.sql_session.permanent_delete_sessions_by_user.app_error",
    "translation": "We couldn't remove all the sessions for the user"
  },
  {
    "id": "store.sql_session.remove.app_error",
    "translation": "We couldn't remove the session"
  },
  {
    "id": "store.sql_session.remove_all_sessions_for_team.app_error",
    "translation": "We couldn't remove all the sessions for the team"
  },
  {
    "id": "store.sql_session.save.app_error",
    "translation": "We couldn't save the session"
  },
  {
    "id": "store.sql_session.save.cleanup.error",
    "translation": "Failed to cleanup sessions in Save err=%v"
  },
  {
    "id": "store.sql_session.save.existing.app_error",
    "translation": "Cannot update existing session"
  },
  {
    "id": "store.sql_session.update_device_id.app_error",
    "translation": "We couldn't update the device id"
  },
  {
    "id": "store.sql_session.update_last_activity.app_error",
    "translation": "We couldn't update the last_activity_at"
  },
  {
    "id": "store.sql_session.update_roles.app_error",
    "translation": "We couldn't update the roles"
  },
  {
    "id": "store.sql_system.get.app_error",
    "translation": "We encountered an error finding the system properties"
  },
  {
    "id": "store.sql_system.save.app_error",
    "translation": "We encountered an error saving the system property"
  },
  {
    "id": "store.sql_system.update.app_error",
    "translation": "We encountered an error updating the system property"
  },
  {
    "id": "store.sql_team.get.find.app_error",
    "translation": "We couldn't find the existing team"
  },
  {
    "id": "store.sql_team.get.finding.app_error",
    "translation": "We encountered an error finding the team"
  },
  {
    "id": "store.sql_team.get_all.app_error",
    "translation": "We could not get all teams"
  },
  {
    "id": "store.sql_team.get_all_team_listing.app_error",
    "translation": "We could not get all teams"
  },
  {
    "id": "store.sql_team.get_by_invite_id.find.app_error",
    "translation": "We couldn't find the existing team"
  },
  {
    "id": "store.sql_team.get_by_invite_id.finding.app_error",
    "translation": "We couldn't find the existing team"
  },
  {
    "id": "store.sql_team.get_by_name.app_error",
    "translation": "We couldn't find the existing team"
  },
  {
    "id": "store.sql_team.get_teams_for_email.app_error",
    "translation": "We encountered a problem when looking up teams"
  },
  {
    "id": "store.sql_team.permanent_delete.app_error",
    "translation": "We couldn't delete the existing team"
  },
  {
    "id": "store.sql_team.save.app_error",
    "translation": "We couldn't save the team"
  },
  {
    "id": "store.sql_team.save.domain_exists.app_error",
    "translation": "A team with that domain already exists"
  },
  {
    "id": "store.sql_team.save.existing.app_error",
    "translation": "Must call update for exisiting team"
  },
  {
    "id": "store.sql_team.update.app_error",
    "translation": "We couldn't update the team"
  },
  {
    "id": "store.sql_team.update.find.app_error",
    "translation": "We couldn't find the existing team to update"
  },
  {
    "id": "store.sql_team.update.finding.app_error",
    "translation": "We encountered an error finding the team"
  },
  {
    "id": "store.sql_team.update.updating.app_error",
    "translation": "We encountered an error updating the team"
  },
  {
    "id": "store.sql_team.update_display_name.app_error",
    "translation": "We couldn't update the team name"
  },
  {
    "id": "store.sql_user.analytics_unique_user_count.app_error",
    "translation": "We couldn't get the unique user count"
  },
  {
    "id": "store.sql_user.get.app_error",
    "translation": "We encountered an error finding the account"
  },
  {
    "id": "store.sql_user.get_by_auth.app_error",
    "translation": "We couldn't find an existing account matching your authentication type for this team. This team may require an invite from the team owner to join."
  },
  {
    "id": "store.sql_user.get_by_username.app_error",
    "translation": "We couldn't find an existing account matching your username for this team. This team may require an invite from the team owner to join."
  },
  {
    "id": "store.sql_user.get_for_export.app_error",
    "translation": "We encountered an error while finding user profiles"
  },
  {
    "id": "store.sql_user.get_profiles.app_error",
    "translation": "We encountered an error while finding user profiles"
  },
  {
    "id": "store.sql_user.get_sysadmin_profiles.app_error",
    "translation": "We encountered an error while finding user profiles"
  },
  {
    "id": "store.sql_user.get_total_active_users_count.app_error",
    "translation": "We could not count the users"
  },
  {
    "id": "store.sql_user.get_total_users_count.app_error",
    "translation": "We could not count the users"
  },
  {
    "id": "store.sql_user.missing_account.const",
    "translation": "We couldn't find an existing account matching your email address for this team. This team may require an invite from the team owner to join."
  },
  {
    "id": "store.sql_user.permanent_delete.app_error",
    "translation": "We couldn't delete the existing account"
  },
  {
    "id": "store.sql_user.save.app_error",
    "translation": "We couldn't save the account."
  },
  {
    "id": "store.sql_user.save.email_exists.app_error",
    "translation": "An account with that email already exists."
  },
  {
    "id": "store.sql_user.save.existing.app_error",
    "translation": "Must call update for exisiting user"
  },
  {
    "id": "store.sql_user.save.max_accounts.app_error",
    "translation": "This team has reached the maxmium number of allowed accounts. Contact your systems administrator to set a higher limit."
  },
  {
    "id": "store.sql_user.save.member_count.app_error",
    "translation": "Failed to get current team member count"
  },
  {
    "id": "store.sql_user.save.username_exists.app_error",
    "translation": "An account with that username already exists."
  },
  {
    "id": "store.sql_user.update.app_error",
    "translation": "We couldn't update the account"
  },
  {
    "id": "store.sql_user.update.email_taken.app_error",
    "translation": "This email is already taken. Please choose another."
  },
  {
    "id": "store.sql_user.update.find.app_error",
    "translation": "We couldn't find the existing account to update"
  },
  {
    "id": "store.sql_user.update.finding.app_error",
    "translation": "We encountered an error finding the account"
  },
  {
    "id": "store.sql_user.update.updating.app_error",
    "translation": "We encountered an error updating the account"
  },
  {
    "id": "store.sql_user.update.username_taken.app_error",
    "translation": "This username is already taken. Please choose another."
  },
  {
    "id": "store.sql_user.update_auth_data.app_error",
    "translation": "We couldn't update the auth data"
  },
  {
    "id": "store.sql_user.update_failed_pwd_attempts.app_error",
    "translation": "We couldn't update the failed_attempts"
  },
  {
    "id": "store.sql_user.update_last_activity.app_error",
    "translation": "We couldn't update the last_activity_at"
  },
  {
    "id": "store.sql_user.update_last_picture_update.app_error",
    "translation": "We couldn't update the update_at"
  },
  {
    "id": "store.sql_user.update_last_ping.app_error",
    "translation": "We couldn't update the last_ping_at"
  },
  {
    "id": "store.sql_user.update_password.app_error",
    "translation": "We couldn't update the user password"
  },
  {
    "id": "store.sql_user.verify_email.app_error",
    "translation": "Unable to update verify email field"
  },
  {
    "id": "store.sql_webhooks.delete_incoming.app_error",
    "translation": "We couldn't delete the webhook"
  },
  {
    "id": "store.sql_webhooks.delete_outgoing.app_error",
    "translation": "We couldn't delete the webhook"
  },
  {
    "id": "store.sql_webhooks.get_incoming.app_error",
    "translation": "We couldn't get the webhook"
  },
  {
    "id": "store.sql_webhooks.get_incoming_by_channel.app_error",
    "translation": "We couldn't get the webhooks"
  },
  {
    "id": "store.sql_webhooks.get_incoming_by_user.app_error",
    "translation": "We couldn't get the webhook"
  },
  {
    "id": "store.sql_webhooks.get_outgoing.app_error",
    "translation": "We couldn't get the webhook"
  },
  {
    "id": "store.sql_webhooks.get_outgoing_by_channel.app_error",
    "translation": "We couldn't get the webhooks"
  },
  {
    "id": "store.sql_webhooks.get_outgoing_by_creator.app_error",
    "translation": "We couldn't get the webhooks"
  },
  {
    "id": "store.sql_webhooks.get_outgoing_by_team.app_error",
    "translation": "We couldn't get the webhooks"
  },
  {
    "id": "store.sql_webhooks.permanent_delete_incoming_by_user.app_error",
    "translation": "We couldn't delete the webhook"
  },
  {
    "id": "store.sql_webhooks.permanent_delete_outgoing_by_user.app_error",
    "translation": "We couldn't delete the webhook"
  },
  {
    "id": "store.sql_webhooks.save_incoming.app_error",
    "translation": "We couldn't save the IncomingWebhook"
  },
  {
    "id": "store.sql_webhooks.save_incoming.existing.app_error",
    "translation": "You cannot overwrite an existing IncomingWebhook"
  },
  {
    "id": "store.sql_webhooks.save_outgoing.app_error",
    "translation": "We couldn't save the OutgoingWebhook"
  },
  {
    "id": "store.sql_webhooks.save_outgoing.override.app_error",
    "translation": "You cannot overwrite an existing OutgoingWebhook"
  },
  {
    "id": "store.sql_webhooks.update_outgoing.app_error",
    "translation": "We couldn't update the webhook"
  },
  {
    "id": "utils.config.load_config.decoding.panic",
    "translation": "Error decoding config file={{.Filename}}, err={{.Error}}"
  },
  {
    "id": "utils.config.load_config.getting.panic",
    "translation": "Error getting config info file={{.Filename}}, err={{.Error}}"
  },
  {
    "id": "utils.config.load_config.opening.panic",
    "translation": "Error opening config file={{.Filename}}, err={{.Error}}"
  },
  {
    "id": "utils.config.load_config.validating.panic",
    "translation": "Error validating config file={{.Filename}}, err={{.Error}}"
  },
  {
    "id": "utils.config.save_config.saving.app_error",
    "translation": "An error occurred while saving the file to {{.Filename}}"
  },
  {
    "id": "utils.i18n.loaded",
    "translation": "Loaded system translations for '%v' from '%v'"
  },
  {
    "id": "utils.iru.with_evict",
    "translation": "Must provide a positive size"
  },
  {
    "id": "utils.license.load_license.invalid.warn",
    "translation": "No valid enterprise license found"
  },
  {
    "id": "utils.license.load_license.open_find.warn",
    "translation": "Unable to open/find license file"
  },
  {
    "id": "utils.license.remove_license.unable.error",
    "translation": "Unable to remove license file, err=%v"
  },
  {
    "id": "utils.license.validate_license.decode.error",
    "translation": "Encountered error decoding license, err=%v"
  },
  {
    "id": "utils.license.validate_license.invalid.error",
    "translation": "Invalid signature, err=%v"
  },
  {
    "id": "utils.license.validate_license.not_long.error",
    "translation": "Signed license not long enough"
  },
  {
    "id": "utils.license.validate_license.signing.error",
    "translation": "Encountered error signing license, err=%v"
  },
  {
    "id": "utils.mail.connect_smtp.open.app_error",
    "translation": "Failed to open connection"
  },
  {
    "id": "utils.mail.connect_smtp.open_tls.app_error",
    "translation": "Failed to open TLS connection"
  },
  {
    "id": "utils.mail.new_client.auth.app_error",
    "translation": "Failed to authenticate on SMTP server"
  },
  {
    "id": "utils.mail.new_client.open.error",
    "translation": "Failed to open a connection to SMTP server %v"
  },
  {
    "id": "utils.mail.send_mail.close.app_error",
    "translation": "Failed to close connection to SMTP server"
  },
  {
    "id": "utils.mail.send_mail.from_address.app_error",
    "translation": "Failed to add from email address"
  },
  {
    "id": "utils.mail.send_mail.msg.app_error",
    "translation": "Failed to write email message"
  },
  {
    "id": "utils.mail.send_mail.msg_data.app_error",
    "translation": "Failed to add email messsage data"
  },
  {
    "id": "utils.mail.send_mail.sending.debug",
    "translation": "sending mail to %v with subject of '%v'"
  },
  {
    "id": "utils.mail.send_mail.to_address.app_error",
    "translation": "Failed to add to email address"
  },
  {
    "id": "utils.mail.test.configured.error",
    "translation": "SMTP server settings do not appear to be configured properly err=%v details=%v"
  },
  {
    "id": "web.admin_console.title",
    "translation": "Admin Console"
  },
  {
    "id": "web.authorize_oauth.disabled.app_error",
    "translation": "The system admin has turned off OAuth service providing."
  },
  {
    "id": "web.authorize_oauth.missing.app_error",
    "translation": "Missing one or more of response_type, client_id, or redirect_uri"
  },
  {
    "id": "web.authorize_oauth.title",
    "translation": "Authorize Application"
  },
  {
    "id": "web.check_browser_compatibility.app_error",
    "translation": "Your current browser is not supported, please upgrade to one of the following browsers: Google Chrome 21 or higher, Internet Explorer 11 or higher, FireFox 14 or higher, Safari 9 or higher"
  },
  {
    "id": "web.claim_account.team.error",
    "translation": "Couldn't find team name=%v, err=%v"
  },
  {
    "id": "web.claim_account.title",
    "translation": "Claim Account"
  },
  {
    "id": "web.claim_account.user.error",
    "translation": "Couldn't find user teamid=%v, email=%v, err=%v"
  },
  {
    "id": "web.create_dir.error",
    "translation": "Failed to create directory watcher %v"
  },
  {
    "id": "web.dir_fail.error",
    "translation": "Failed in directory watcher %v"
  },
  {
    "id": "web.do_load_channel.error",
    "translation": "Error in getting users profile for id=%v forcing logout"
  },
  {
    "id": "web.doc.title",
    "translation": "Documentation"
  },
  {
    "id": "web.email_verified.title",
    "translation": "Email Verified"
  },
  {
    "id": "web.find_team.title",
    "translation": "Find Team"
  },
  {
    "id": "web.footer.about",
    "translation": "About"
  },
  {
    "id": "web.footer.help",
    "translation": "Help"
  },
  {
    "id": "web.footer.privacy",
    "translation": "Privacy"
  },
  {
    "id": "web.footer.terms",
    "translation": "Terms"
  },
  {
    "id": "web.get_access_token.bad_client_id.app_error",
    "translation": "invalid_request: Bad client_id"
  },
  {
    "id": "web.get_access_token.bad_client_secret.app_error",
    "translation": "invalid_request: Missing client_secret"
  },
  {
    "id": "web.get_access_token.bad_grant.app_error",
    "translation": "invalid_request: Bad grant_type"
  },
  {
    "id": "web.get_access_token.credentials.app_error",
    "translation": "invalid_client: Invalid client credentials"
  },
  {
    "id": "web.get_access_token.disabled.app_error",
    "translation": "The system admin has turned off OAuth service providing."
  },
  {
    "id": "web.get_access_token.exchanged.app_error",
    "translation": "invalid_grant: Authorization code already exchanged for an access token"
  },
  {
    "id": "web.get_access_token.expired_code.app_error",
    "translation": "invalid_grant: Invalid or expired authorization code"
  },
  {
    "id": "web.get_access_token.internal.app_error",
    "translation": "server_error: Encountered internal server error while accessing database"
  },
  {
    "id": "web.get_access_token.internal_saving.app_error",
    "translation": "server_error: Encountered internal server error while saving access token to database"
  },
  {
    "id": "web.get_access_token.internal_session.app_error",
    "translation": "server_error: Encountered internal server error while saving session to database"
  },
  {
    "id": "web.get_access_token.internal_user.app_error",
    "translation": "server_error: Encountered internal server error while pulling user from database"
  },
  {
    "id": "web.get_access_token.missing_code.app_error",
    "translation": "invalid_request: Missing code"
  },
  {
    "id": "web.get_access_token.redirect_uri.app_error",
    "translation": "invalid_request: Supplied redirect_uri does not match authorization code redirect_uri"
  },
  {
    "id": "web.get_access_token.revoking.error",
    "translation": "Encountered an error revoking an access token, err="
  },
  {
    "id": "web.incoming_webhook.channel.app_error",
    "translation": "Couldn't find the channel"
  },
  {
    "id": "web.incoming_webhook.disabled.app_error",
    "translation": "Incoming webhooks have been disabled by the system admin."
  },
  {
    "id": "web.incoming_webhook.invalid.app_error",
    "translation": "Invalid webhook"
  },
  {
    "id": "web.incoming_webhook.parse.app_error",
    "translation": "Unable to parse incoming data"
  },
  {
    "id": "web.incoming_webhook.permissions.app_error",
    "translation": "Inappropriate channel permissions"
  },
  {
    "id": "web.incoming_webhook.text.app_error",
    "translation": "No text specified"
  },
  {
    "id": "web.incoming_webhook.user.app_error",
    "translation": "Couldn't find the user"
  },
  {
    "id": "web.init.debug",
    "translation": "Initializing web routes"
  },
  {
    "id": "web.login.error",
    "translation": "Couldn't find team name=%v, err=%v"
  },
  {
    "id": "web.login.login_title",
    "translation": "Login"
  },
  {
    "id": "web.login_with_oauth.invalid_team.app_error",
    "translation": "Invalid team name"
  },
  {
    "id": "web.parsing_templates.debug",
    "translation": "Parsing templates at %v"
  },
  {
    "id": "web.parsing_templates.error",
    "translation": "Failed to parse templates %v"
  },
  {
    "id": "web.post_permalink.app_error",
    "translation": "Invalid Post ID"
  },
  {
    "id": "web.reparse_templates.info",
    "translation": "Re-parsing templates because of modified file %v"
  },
  {
    "id": "web.reset_password.expired_link.app_error",
    "translation": "The password reset link has expired"
  },
  {
    "id": "web.reset_password.invalid_link.app_error",
    "translation": "The reset link does not appear to be valid"
  },
  {
    "id": "web.root.home_title",
    "translation": "Home"
  },
  {
    "id": "web.root.singup_info",
    "translation": "All team communication in one place, searchable and accessible anywhere"
  },
  {
    "id": "web.root.singup_title",
    "translation": "Signup"
  },
  {
    "id": "web.signup_team_complete.invalid_link.app_error",
    "translation": "The signup link does not appear to be valid"
  },
  {
    "id": "web.signup_team_complete.link_expired.app_error",
    "translation": "The signup link has expired"
  },
  {
    "id": "web.signup_team_complete.title",
    "translation": "Complete Team Sign Up"
  },
  {
    "id": "web.signup_team_confirm.title",
    "translation": "Signup Email Sent"
  },
  {
    "id": "web.signup_user_complete.link_expired.app_error",
    "translation": "The signup link has expired"
  },
  {
    "id": "web.signup_user_complete.link_invalid.app_error",
    "translation": "The signup link does not appear to be valid"
  },
  {
    "id": "web.signup_user_complete.no_invites.app_error",
    "translation": "The team type doesn't allow open invites"
  },
  {
    "id": "web.signup_user_complete.title",
    "translation": "Complete User Sign Up"
  },
  {
    "id": "web.singup_with_oauth.disabled.app_error",
    "translation": "User sign-up is disabled."
  },
  {
    "id": "web.singup_with_oauth.expired_link.app_error",
    "translation": "The signup link has expired"
  },
  {
    "id": "web.singup_with_oauth.invalid_link.app_error",
    "translation": "The signup link does not appear to be valid"
  },
  {
    "id": "web.singup_with_oauth.invalid_team.app_error",
    "translation": "Invalid team name"
  },
  {
    "id": "web.watcher_fail.error",
    "translation": "Failed to add directory to watcher %v"
  }
]
